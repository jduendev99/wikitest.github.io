"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[9772],{98332:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>j,frontMatter:()=>c,metadata:()=>d,toc:()=>u});var t=r(17624),a=r(4552),l=r(61268),i=r(87768),s=r(94384);const c={sidebar_position:4,sidebar_label:"JS reduce() in depth",title:"JavaScript reduce() in depth"},o="JavaScript reduce() in depth",d={id:"js-tips/js-reduce",title:"JavaScript reduce() in depth",description:"The reduce() method is an iterative method. It runs a reducer callback function over all elements in the array, in ascending-index order, and accumulates them into a single value.",source:"@site/docs/js-tips/js-reduce.mdx",sourceDirName:"js-tips",slug:"/js-tips/js-reduce",permalink:"/wiki/docs/js-tips/js-reduce",draft:!1,unlisted:!1,editUrl:"https://github.com/actionanand/wiki/docs/js-tips/js-reduce.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"JS reduce() in depth",title:"JavaScript reduce() in depth"},sidebar:"tutorialSidebar",previous:{title:"Obj. Chain into Array",permalink:"/wiki/docs/js-tips/object-into-array"},next:{title:"My Tips - 1",permalink:"/wiki/docs/js-tips/my-tips-1"}},h={},u=[{value:"Working Logic:",id:"working-logic",level:3},{value:"Basic reduction &amp; techniques",id:"basic-reduction--techniques",level:3},{value:"Creating a Tally with the Reduce Method In JavaScript",id:"creating-a-tally-with-the-reduce-method-in-javascript",level:3},{value:"Break through of the above code:",id:"break-through-of-the-above-code",level:4},{value:"Character Frequency",id:"character-frequency",level:3},{value:"We can see the explanation of the map. at line number 2.",id:"we-can-see-the-explanation-of-the-map-at-line-number-2",level:4},{value:"Flattening an array of arrays",id:"flattening-an-array-of-arrays",level:3},{value:"<Highlight>reduceRight()</Highlight> method",id:"reduceright-method",level:3}];function x(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.M)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"javascript-reduce-in-depth",children:["JavaScript ",(0,t.jsx)(s.c,{color:"#C0C0C0",children:"reduce()"})," in depth"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(s.c,{color:"#C0C0C0",children:"reduce()"})," method is an iterative method. It runs a ",(0,t.jsx)(n.strong,{children:"reducer"})," callback function over all elements in the array, in ",(0,t.jsx)(n.strong,{children:"ascending-index order"}),", and accumulates them into a single value."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// Syntax\nreduce(callbackFn)\nreduce(callbackFn, initialValue)\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(s.c,{color:"#C0C0C0",children:"callbackFn"})," : A function to execute for each element in the array. Its return value becomes the value of the ",(0,t.jsx)(n.code,{children:"accumulator"})," parameter on the next invocation of ",(0,t.jsx)(n.code,{children:"callbackFn"}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(s.c,{color:"#C0C0C0",children:"accumulator"})," : The value resulting from the previous call to ",(0,t.jsx)(n.code,{children:"callbackFn"}),". On the first call, its value is ",(0,t.jsx)(n.code,{children:"initialValue"})," if the latter is specified; otherwise its value is ",(0,t.jsx)(n.code,{children:"array[0]"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(s.c,{color:"#C0C0C0",children:"currentValue"})," : The value of the current element. On the first call, its value is ",(0,t.jsx)(n.code,{children:"array[0]"})," if ",(0,t.jsx)(n.code,{children:"initialValue"})," is specified; otherwise its value is ",(0,t.jsx)(n.code,{children:"array[1]"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(s.c,{color:"#C0C0C0",children:"currentIndex"})," : The index position of ",(0,t.jsx)(n.code,{children:"currentValue"})," in the array. On the first call, its value is ",(0,t.jsx)(n.code,{children:"0"})," if ",(0,t.jsx)(n.code,{children:"initialValue"})," is specified, otherwise ",(0,t.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(s.c,{color:"#C0C0C0",children:"array"})," : The array ",(0,t.jsx)(n.code,{children:"reduce()"})," was called upon."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(s.c,{color:"#C0C0C0",children:"initialValue"})," - Optional : A value to which ",(0,t.jsx)(n.code,{children:"accumulator"})," is initialized the first time the callback is called."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"working-logic",children:"Working Logic:"}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsxs)("summary",{children:["How ",(0,t.jsx)(n.code,{children:"reduce()"})," Work"]}),(0,t.jsx)("div",{children:(0,t.jsxs)(l.c,{className:"unique-tabs",children:[(0,t.jsx)(i.c,{value:"Without initial value",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const array = [15, 16, 17, 18, 19];\n\nfunction reducer(accumulator, currentValue, index) {\n  const returns = accumulator + currentValue;\n  console.log(\n    `accumulator: ${accumulator}, currentValue: ${currentValue}, index: ${index}, returns: ${returns}`,\n  );\n  return returns;\n}\n\narray.reduce(reducer);\n\n// Output\n85\n"})})}),(0,t.jsx)(i.c,{value:"Detail - w/o initial",children:(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"accumulator"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"currentValue"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"index"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Return value"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"First call"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"15"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"16"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"1"})}),(0,t.jsx)(n.td,{children:"31"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Second call"}),(0,t.jsx)(n.td,{children:"31"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"17"})}),(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:"48"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Third call"}),(0,t.jsx)(n.td,{children:"48"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"18"})}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"66"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Fourth call"}),(0,t.jsx)(n.td,{children:"66"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"19"})}),(0,t.jsx)(n.td,{children:"4"}),(0,t.jsx)(n.td,{children:"85"})]})]})]})}),(0,t.jsx)(i.c,{value:"With initial value",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const array = [15, 16, 17, 18, 19];\n\narray.reduce(\n  (accumulator, currentValue) => accumulator + currentValue,\n  10,\n);\n\n// Output\n95\n"})})}),(0,t.jsx)(i.c,{value:"Detail - w. initial",children:(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"accumulator"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"currentValue"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"index"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Return value"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"First call"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"10"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"15"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"0"})}),(0,t.jsx)(n.td,{children:"25"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Second call"}),(0,t.jsx)(n.td,{children:"25"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"16"})}),(0,t.jsx)(n.td,{children:"1"}),(0,t.jsx)(n.td,{children:"41"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Third call"}),(0,t.jsx)(n.td,{children:"41"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"17"})}),(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:"58"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Fourth call"}),(0,t.jsx)(n.td,{children:"58"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"18"})}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"76"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Fifth call"}),(0,t.jsx)(n.td,{children:"76"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"19"})}),(0,t.jsx)(n.td,{children:"4"}),(0,t.jsx)(n.td,{children:"95"})]})]})]})})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"basic-reduction--techniques",children:"Basic reduction & techniques"}),"\n",(0,t.jsxs)(l.c,{children:[(0,t.jsx)(i.c,{value:"basic",label:"Basic Reduction",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const euros = [29.76, 41.85, 46.5];\n\nconst sum = euros.reduce((total, el) => total + el); \n\nsum // 118.11\n"})})}),(0,t.jsx)(i.c,{value:"average",label:"Average",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const euros = [29.76, 41.85, 46.5];\n\nconst average = euros.reduce((total, el, index, array) => {\n  total += el;\n  if( index === array.length-1) { \n    return total/array.length;\n  }else { \n    return total;\n  }\n});\n\naverage // 39.37\n"})})}),(0,t.jsx)(i.c,{value:"doubling",label:"Doubling",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const euros = [29.76, 41.85, 46.5];\n\nconst doubled = euros.reduce((total, el) => {\n  total.push(el * 2);\n  return total;\n}, []);\n\ndoubled // [59.52, 83.7, 93]\n"})})}),(0,t.jsx)(i.c,{value:"filter",label:"Filtering Out",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const euro = [29.76, 41.85, 46.5];\n\nconst above30 = euro.reduce((total, el) => {\n  if (el > 30) {\n    total.push(el);\n  }\n  return total;\n}, []);\n\nabove30 // [ 41.85, 46.5 ]\n"})})})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"initialValue"})," (say ",(0,t.jsx)(n.code,{children:"[]"}),") will become ",(0,t.jsx)(n.code,{children:"total"})," in the first iteration."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-tally-with-the-reduce-method-in-javascript",children:"Creating a Tally with the Reduce Method In JavaScript"}),"\n",(0,t.jsx)(n.p,{children:"We can use the below logic to find how many of each item are in the collection (Frequency of the item in an array)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const fruitBasket = ['banana', 'cherry', 'orange', 'apple', 'cherry', 'orange', 'apple', 'banana', 'cherry', 'orange', 'fig' ];\nlet max = 0; \nlet maxFruit = '';\n\nconst fruitsMap = fruitBasket.reduce( (tally, fruit) => {\n  // highlight-start\n  tally[fruit] = (tally[fruit] || 0) + 1 ;\n  return tally;\n  // highlight-end\n} , {});\n\nconsole.log(fruitsMap); // { banana: 2, cherry: 3, orange: 3, apple: 2, fig: 1 }\n\nfor(let fruit in fruitsMap) {\n  if(fruitsMap[fruit] > max) {\n    // `fruitsMap[fruit]` will return its count from map\n    max = fruitsMap[fruit];\n    maxFruit = fruit;\n  }\n}\n\nconsole.log(`${maxFruit} - ${max}`); // cherry - 3\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tally[fruit]"})," in line number 4 (Right side of =) is similar to ",(0,t.jsx)(n.code,{children:"tally.fruit"}),", where ",(0,t.jsx)(n.code,{children:"tally"})," is object (accumulator)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fruit"})," is each elements of the array."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"break-through-of-the-above-code",children:"Break through of the above code:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"On our first pass, we want the name of the first key to be our current value(banana) and we want to give it a value of 1."}),"\n",(0,t.jsx)(n.li,{children:"This gives us an object with all the fruit as keys, each with a value of 1. We want the amount of each fruit to increase if they repeat."}),"\n",(0,t.jsx)(n.li,{children:"To do this, on our second loop we check if our total contain a key with the current fruit of the reducer. If it doesn\u2019t then we create it. If it does then we increment the amount by one."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The above code in simplified form as below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"fruitBasket.reduce((tally, fruit) => {\n  if (!tally[fruit]) {\n    tally[fruit] = 1;\n  } else {\n    tally[fruit] = tally[fruit] + 1;\n  }\n  return tally;\n}, {});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"character-frequency",children:"Character Frequency"}),"\n",(0,t.jsxs)(n.p,{children:["Converting ",(0,t.jsx)(n.code,{children:"string"})," into the object with letters & its frequency"]}),"\n",(0,t.jsxs)(l.c,{children:[(0,t.jsx)(i.c,{value:"reduce",label:"Using Reduce",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const freqMap = str => str.split('').reduce(\n  // highlight-next-line\n  (map, char) => (map[char] ??= 0, map[char]++, map), \n  {}\n);\n\nfreqMap('anand');\n\n// Output\n{a: 2, n: 2, d: 1}\n"})})}),(0,t.jsx)(i.c,{value:"break",label:"Break-through",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const freqMap = str => str.split('').reduce(\n  // highlight-next-line\n  (map, char) => (map[char] ??= 0, map[char]++, console.log(map), map), \n  {}\n);\n\nfreqMap('anand');\n\n// Output\n{a: 1}\n{a: 1, n: 1}\n{a: 2, n: 1}\n{a: 2, n: 2}\n{a: 2, n: 2, d: 1}\n"})})}),(0,t.jsx)(i.c,{value:"for-of",label:"Using For-of",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const map = new Map();\nconst str = 'anand'.split(''); // const str = 'anand';\n\n// highlight-start\nfor (const char of str) {\n  map[char] ??= 0;\n  map[char]++;\n}\n// highlight-end\n\nconsole.log(map);\n\n// Output\n{a: 2, n: 2, d: 1}\n"})})}),(0,t.jsx)(i.c,{value:"break-through",label:"Break-through",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const map = new Map();\nconst str = 'anand';\n\n// Create a map object and initialize it with the value 0 for each character in the string `str`.\nfor (const char of str) {\n  map[char] ??= 0;\n}\n\nconsole.log(map); // Map(0) {a: 0, n: 0, d: 0, size: 0}\n\n// Increment the value of the map object for each character in the string `str`.\nfor (const char of str) {\n  map[char]++;\n}\n\nconsole.log(map); // Map(0)\xa0{a: 2, n: 2, d: 1, size: 0}\n\n// Return the map object.\nconsole.log(map);\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"??="})," operator in JavaScript is the ",(0,t.jsx)(n.strong,{children:"nullish coalescing assignment operator"}),". It is a logical operator that ",(0,t.jsx)(n.strong,{children:"returns its right-hand side operand"})," when its ",(0,t.jsx)(n.strong,{children:"left-hand side operand"})," is ",(0,t.jsx)(n.code,{children:"null"})," or ",(0,t.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"let x = null;\nx ??= 5;\nconsole.log(x); // 5\n\nlet y = undefined;\ny ??= 10;\nconsole.log(y); // 10\n\nlet z = 15;\nz ??= 20;\nconsole.log(z); // 15\n"})}),"\n",(0,t.jsx)(n.h4,{id:"we-can-see-the-explanation-of-the-map-at-line-number-2",children:"We can see the explanation of the map. at line number 2."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"(map[char] ??= 0, map[char]++, map)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This code is a concise way to increment the value associated with a key in a map. The ",(0,t.jsx)(n.code,{children:"??="})," operator is called the ",(0,t.jsx)(n.strong,{children:"nullish coalescing assignment operator"}),". It checks if the value of ",(0,t.jsx)(n.code,{children:"map[char]"})," is ",(0,t.jsx)(n.code,{children:"null"})," or ",(0,t.jsx)(n.code,{children:"undefined"}),". If it is, then the value of ",(0,t.jsx)(n.code,{children:"map[char]"})," is set to ",(0,t.jsx)(n.code,{children:"0"}),". Otherwise, the value of ",(0,t.jsx)(n.code,{children:"map[char]"})," is left unchanged."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"++"})," operator increments the value of ",(0,t.jsx)(n.code,{children:"map[char]"}),". The map variable is returned at the end of the expression."]}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of how to use this code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const map = new Map();\n\n// Increment the value associated with the key 'a'\n(map['a'] ??= 0, map['a']++, map);\n\n// Increment the value associated with the key 'b'\n(map['b'] ??= 0, map['b']++, map);\n\nconsole.log(map); // { 'a': 1, 'b': 1 }\n"})}),"\n",(0,t.jsx)(n.h3,{id:"flattening-an-array-of-arrays",children:"Flattening an array of arrays"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n\nconst flat = data.reduce((total, el) => {\n  return total.concat(el);\n}, []);\n\nflat // [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Each elements will be concatenated one after one. Our first pass is empty arrya. Then first element ([1, 2, 3]) will be be concatenated to empty array and so on."}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"reduceright-method",children:[(0,t.jsx)(s.c,{color:"#C0C0C0",children:"reduceRight()"})," method"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(s.c,{color:"#C0C0C0",children:"reduceRight()"})," method works in the same way as the ",(0,t.jsx)(s.c,{color:"#C0C0C0",children:"reduce()"})," method, ",(0,t.jsx)(n.strong,{children:"but in the opposite direction"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"reduce()"})," method starts at the first element and travels toward the last, whereas the ",(0,t.jsx)(n.code,{children:"reduceRight()"})," method starts at the last element and travels backward the first."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://github.com/actionanand/wiki/assets/46064269/6f68243a-d262-44fc-8bc4-de349755ae6f",alt:"image"})})]})}function j(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},87768:(e,n,r)=>{r.d(n,{c:()=>i});r(11504);var t=r(65456);const a={tabItem:"tabItem_Ymn6"};var l=r(17624);function i(e){let{children:n,hidden:r,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,t.c)(a.tabItem,i),hidden:r,children:n})}},61268:(e,n,r)=>{r.d(n,{c:()=>w});var t=r(11504),a=r(65456),l=r(53943),i=r(55592),s=r(95288),c=r(10632),o=r(27128),d=r(21148);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,o.w)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function x(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:r}=e;const a=(0,i.Uz)(),l=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c._M)(l),(0,t.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(a.location.search);n.set(l,e),a.replace({...a.location,search:n.toString()})}),[l,a])]}function p(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,l=u(e),[i,c]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!x({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:l}))),[o,h]=j({queryString:r,groupId:a}),[p,m]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,l]=(0,d.IN)(r);return[a,(0,t.useCallback)((e=>{r&&l.set(e)}),[r,l])]}({groupId:a}),f=(()=>{const e=o??p;return x({value:e,tabValues:l})?e:null})();(0,s.c)((()=>{f&&c(f)}),[f]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!x({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),m(e)}),[h,m,l]),tabValues:l}}var m=r(93664);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(17624);function b(e){let{className:n,block:r,selectedValue:t,selectValue:i,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.MV)(),d=e=>{const n=e.currentTarget,r=c.indexOf(n),a=s[r].value;a!==t&&(o(n),i(a))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.c)("tabs",{"tabs--block":r},n),children:s.map((e=>{let{value:n,label:r,attributes:l}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...l,className:(0,a.c)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function v(e){let{lazy:n,children:r,selectedValue:a}=e;const l=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=p(e);return(0,g.jsxs)("div",{className:(0,a.c)("tabs-container",f.tabList),children:[(0,g.jsx)(b,{...e,...n}),(0,g.jsx)(v,{...e,...n})]})}function w(e){const n=(0,m.c)();return(0,g.jsx)(y,{...e,children:h(e.children)},String(n))}},94384:(e,n,r)=>{r.d(n,{c:()=>a});r(11504);var t=r(17624);function a(e){let{children:n,color:r,highlight:a="bg",fontWeight:l="normal",textDecoration:i="none",fontStyle:s="normal",textAlign:c="left"}=e;return"fg"===a?(0,t.jsx)("span",{style:{color:r,fontWeight:l,textDecoration:i,fontStyle:s,textAlign:c},children:n}):"format"===a?(0,t.jsx)("div",{style:{textAlign:c,color:r,fontWeight:l,textDecoration:i,fontStyle:s},children:n}):(0,t.jsx)("span",{style:{backgroundColor:r,borderRadius:"4px",color:"#fff",padding:"0.2rem",paddingTop:"0"},children:n})}},4552:(e,n,r)=>{r.d(n,{I:()=>s,M:()=>i});var t=r(11504);const a={},l=t.createContext(a);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);