"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[4488],{8424:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"bash-terminal-customization","metadata":{"permalink":"/wiki/blog/bash-terminal-customization","editUrl":"https://github.com/actionanand/wiki/blog/2024-05-30-bash-terminal-customization.md","source":"@site/blog/2024-05-30-bash-terminal-customization.md","title":"Bash terminal customization","description":"Linux Shells","date":"2024-05-30T00:00:00.000Z","tags":[{"label":"wsl","permalink":"/wiki/blog/tags/wsl"},{"label":"linux","permalink":"/wiki/blog/tags/linux"},{"label":"ubuntu","permalink":"/wiki/blog/tags/ubuntu"},{"label":"git","permalink":"/wiki/blog/tags/git"},{"label":"bash","permalink":"/wiki/blog/tags/bash"}],"readingTime":7.445,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"bash-terminal-customization","title":"Bash terminal customization","authors":"anand","tags":["wsl","linux","ubuntu","git","bash"]},"unlisted":false,"nextItem":{"title":"WSL and Miniconda","permalink":"/wiki/blog/wsl-and-miniconda"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\nimport Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\'\\n\\n## <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> Linux Shells </Highlight>\\n\\nWhen we open up our terminal, chances are that it uses Bash as its UNIX shell environment. But other **shell** environments exist such as the C Shell, Korn Shell, Z Shell, and even the Fish Shell. All of these different shell environments have their own pros and cons, and you should consider them before you choose one to use on your own system.\\n\\n\x3c!--truncate--\x3e\\n\\n1. The <Highlight color=\'#25c2a0\'> Bash </Highlight> Shell (or the **B**ourne **A**gain **Sh**ell) is a UNIX shell and command language. It was written by Brain Fox for the GNU Project as a free software replacement for the Bourne Shell (**sh**). \\n\\n    * It was first released in 1989. Bash is one of the first programs that Linus Torvalds (the creator of Linux) ported to Linux.\\n\\n    * User configuration settings are in `.bashrc` (short for **bash** **r**ead **c**ommand).\\n\\n    * Something you should not get confused about is that Bash is also a programming language. So it\'s a \\"Shell\\", but you can also program behavior in Bash. For example:\\n\\n\\t\\t```sh\\n\\t\\t#!/bin/bash\\n\\t\\techo \\"Hello World\\"\\n\\t\\t```\\n\\n2. The <Highlight color=\'#25c2a0\'> Z Shell </Highlight>, or <Highlight color=\'#25c2a0\'> Zsh </Highlight> is also a UNIX shell that is very similar to Bash. Zsh is an extension of the Bourne shell with a lot of improvements. Zsh was released in 1990 by Paul Falstad, and it has some features that Bash, Korn Shell, and C Shell share.\\n\\n    * The name zsh derives from the name of Yale professor **Z**hong **Sh**ao (then a teaching assistant at Princeton University) \u2013 Paul Falstad regarded Shao\'s login-id, <Highlight color=\'#25c2a0\'> zsh </Highlight>, as a good name for a shell\\n    * macOS by default uses the Zsh Shell.\\n    * Zshell Supports plugins and themes. Here\'s a [list of plugins](https://github.com/unixorn/awesome-zsh-plugins) available for Zsh.\\n    * There are also frameworks built around the Z Shell. One of the most popular ones is [Oh My Zsh](https://ohmyz.sh/), which is a community driven, open-source framework for managing Zsh configuration.\\n\\n3. <Highlight color=\'#25c2a0\'> Fish </Highlight>, the **F**riendly **I**nteractive **SH**ell, is a more recent addition to the world of shell environments. It prioritizes user-friendliness and simplicity, making it a great choice for newcomers to programming. It was created by Axel Liljencrantz in 2005.\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Install Fish or Zsh on Ubuntu </Highlight>\\n\\n1. Update the package source list and updates all the packages presently installed\\n\\n\\t\\t```sh\\n\\t\\tsudo apt update && sudo apt upgrade\\n\\t\\t```\\n2. Install fish/zsh\\n\\n\\t\\t```sh\\n\\t\\t# install fish\\n\\t\\tsudo apt install fish\\n\\t\\t# install z shell\\n\\t\\tsudo apt install zsh\\n\\t\\t```\\n3. Verify the installed version of the shell\\n\\n\\t\\t```sh\\n\\t\\tzsh --version\\n\\t\\t# zsh 5.8.1 (x86_64-ubuntu-linux-gnu)\\n\\t\\tbash --version\\n\\t\\t# GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)\\n\\t\\tfish --version\\n\\t\\t# fish, version 3.3.1\\n\\t\\t```\\n\\n    <Highlight color=\'#25c2a0\'> GNU </Highlight> is a recursive acronym for <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> GNU\'s Not Unix! </Highlight>\\n\\n4. Set fish or zsh or bash as your default shell.\\n\\n\\t\\t```sh\\n\\t\\t# for fish\\n\\t\\tchsh -s $(which fish)\\n\\t\\t# for zsh\\n\\t\\tchsh -s $(which zsh)\\n\\t\\t# for bash\\n\\t\\tchsh -s $(which bash)\\n\\t\\t```\\n\\t\\t\\n\\t\\tRestart the terminal window and check the current shell by `echo $SHELL`.\\n\\n## <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> Current git branch name to bash shell in Ubuntu (WSL) </Highlight>\\n\\nMake your life easier as a developer and know the current branch in your workspace without complications. And the best? Without installing anything additional!\\n\\n1. Open the `bashrc` file and look for the variable `$PS1`, which is the enviroment variable that store the default prompt setting we see every time when we log in the console.\\n\\n```bash\\ncat ~/.bashrc\\n```\\n\\n<details>\\n  <summary>`.bashrc` File sample</summary>\\n  <div>\\n```sh title=\\"~/.bashrc\\"\\n# ~/.bashrc: executed by bash(1) for non-login shells.\\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\\n# for examples\\n\\n# If not running interactively, don\'t do anything\\ncase $- in\\n    *i*) ;;\\n      *) return;;\\nesac\\n\\n# don\'t put duplicate lines or lines starting with space in the history.\\n# See bash(1) for more options\\nHISTCONTROL=ignoreboth\\n\\n# append to the history file, don\'t overwrite it\\nshopt -s histappend\\n\\n# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\\nHISTSIZE=1000\\nHISTFILESIZE=2000\\n\\n# check the window size after each command and, if necessary,\\n# update the values of LINES and COLUMNS.\\nshopt -s checkwinsize\\n\\n# If set, the pattern \\"**\\" used in a pathname expansion context will\\n# match all files and zero or more directories and subdirectories.\\n#shopt -s globstar\\n\\n# make less more friendly for non-text input files, see lesspipe(1)\\n[ -x /usr/bin/lesspipe ] && eval \\"$(SHELL=/bin/sh lesspipe)\\"\\n\\n# set variable identifying the chroot you work in (used in the prompt below)\\nif [ -z \\"${debian_chroot:-}\\" ] && [ -r /etc/debian_chroot ]; then\\n    debian_chroot=$(cat /etc/debian_chroot)\\nfi\\n\\n# set a fancy prompt (non-color, unless we know we \\"want\\" color)\\ncase \\"$TERM\\" in\\n    xterm-color|*-256color) color_prompt=yes;;\\nesac\\n\\n# uncomment for a colored prompt, if the terminal has the capability; turned\\n# off by default to not distract the user: the focus in a terminal window\\n# should be on the output of commands, not on the prompt\\n#force_color_prompt=yes\\n\\nif [ -n \\"$force_color_prompt\\" ]; then\\n    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\\n        # We have color support; assume it\'s compliant with Ecma-48\\n        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\\n        # a case would tend to support setf rather than setaf.)\\n        color_prompt=yes\\n    else\\n        color_prompt=\\n    fi\\nfi\\n\\n# highlight-start\\nif [ \\"$color_prompt\\" = yes ]; then\\n    PS1=\'${debian_chroot:+($debian_chroot)}\\\\[\\\\033[01;32m\\\\]\\\\u@\\\\h\\\\[\\\\033[00m\\\\]:\\\\[\\\\033[01;34m\\\\]\\\\w\\\\[\\\\033[00m\\\\]\\\\$ \'\\nelse\\n    PS1=\'${debian_chroot:+($debian_chroot)}\\\\u@\\\\h:\\\\w\\\\$ \'\\nfi\\nunset color_prompt force_color_prompt\\n# highlight-end\\n\\n# If this is an xterm set the title to user@host:dir\\ncase \\"$TERM\\" in\\nxterm*|rxvt*)\\n    PS1=\\"\\\\[\\\\e]0;${debian_chroot:+($debian_chroot)}\\\\u@\\\\h: \\\\w\\\\a\\\\]$PS1\\"\\n    ;;\\n*)\\n    ;;\\nesac\\n\\n# enable color support of ls and also add handy aliases\\nif [ -x /usr/bin/dircolors ]; then\\n    test -r ~/.dircolors && eval \\"$(dircolors -b ~/.dircolors)\\" || eval \\"$(dircolors -b)\\"\\n    alias ls=\'ls --color=auto\'\\n    #alias dir=\'dir --color=auto\'\\n    #alias vdir=\'vdir --color=auto\'\\n\\n    alias grep=\'grep --color=auto\'\\n    alias fgrep=\'fgrep --color=auto\'\\n    alias egrep=\'egrep --color=auto\'\\nfi\\n\\n# colored GCC warnings and errors\\n#export GCC_COLORS=\'error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01\'\\n\\n# some more ls aliases\\nalias ll=\'ls -alF\'\\nalias la=\'ls -A\'\\nalias l=\'ls -CF\'\\n\\n# Add an \\"alert\\" alias for long running commands.  Use like so:\\n#   sleep 10; alert\\nalias alert=\'notify-send --urgency=low -i \\"$([ $? = 0 ] && echo terminal || echo error)\\" \\"$(history|tail -n1|sed -e \'\\\\\'\'s/^\\\\s*[0-9]\\\\+\\\\s*//;s/[;&|]\\\\s*alert$//\'\\\\\'\')\\"\'\\n\\n# Alias definitions.\\n# You may want to put all your additions into a separate file like\\n# ~/.bash_aliases, instead of adding them here directly.\\n# See /usr/share/doc/bash-doc/examples in the bash-doc package.\\n\\nif [ -f ~/.bash_aliases ]; then\\n    . ~/.bash_aliases\\nfi\\n\\n# enable programmable completion features (you don\'t need to enable\\n# this, if it\'s already enabled in /etc/bash.bashrc and /etc/profile\\n# sources /etc/bash.bashrc).\\nif ! shopt -oq posix; then\\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\\n    . /usr/share/bash-completion/bash_completion\\n  elif [ -f /etc/bash_completion ]; then\\n    . /etc/bash_completion\\n  fi\\nfi\\n\\nexport NVM_DIR=\\"$HOME/.nvm\\"\\n[ -s \\"$NVM_DIR/nvm.sh\\" ] && \\\\. \\"$NVM_DIR/nvm.sh\\"  # This loads nvm\\n[ -s \\"$NVM_DIR/bash_completion\\" ] && \\\\. \\"$NVM_DIR/bash_completion\\"  # This loads nvm bash_completion\\n\\n# >>> conda initialize >>>\\n# !! Contents within this block are managed by \'conda init\' !!\\n__conda_setup=\\"$(\'/home/actionanand/miniconda3/bin/conda\' \'shell.bash\' \'hook\' 2> /dev/null)\\"\\nif [ $? -eq 0 ]; then\\n    eval \\"$__conda_setup\\"\\nelse\\n    if [ -f \\"/home/actionanand/miniconda3/etc/profile.d/conda.sh\\" ]; then\\n        . \\"/home/actionanand/miniconda3/etc/profile.d/conda.sh\\"\\n    else\\n        export PATH=\\"/home/actionanand/miniconda3/bin:$PATH\\"\\n    fi\\nfi\\nunset __conda_setup\\n# <<< conda initialize <<<\\n\\nconda activate wsl2\\n```\\n  </div>\\n</details>\\n\\n2. edit the `.bashrc` file as shown below under **New Bashrc** tab using your editor such as nano, vi, vim, etc and save\\n\\n\\t```sh\\n\\tnano ~/.bashrc\\n\\t```\\n\\n<Tabs>\\n  <TabItem value=\\"default\\" label=\\"Default Bashrc\\" default>\\n```sh\\nif [ \\"$color_prompt\\" = yes ]; then\\n# highlight-next-line\\n    PS1=\'${debian_chroot:+($debian_chroot)}\\\\[\\\\033[01;32m\\\\]\\\\u@\\\\h\\\\[\\\\033[00m\\\\]:\\\\[\\\\033[01;34m\\\\]\\\\w\\\\[\\\\033[00m\\\\]\\\\$ \'\\nelse\\n# highlight-next-line\\n    PS1=\'${debian_chroot:+($debian_chroot)}\\\\u@\\\\h:\\\\w\\\\$ \'\\nfi\\nunset color_prompt force_color_prompt\\n```\\n  </TabItem>\\n  <TabItem value=\\"modified\\" label=\\"New Bashrc\\">\\n```bash\\n# highlight-start\\n# git branch info if present\\nparse_git_branch() {\\n    git branch 2> /dev/null | sed -e \'/^[^*]/d\' -e \'s/* \\\\(.*\\\\)/ (\\\\1)/\'\\n}\\n# highlight-end\\n\\nif [ \\"$color_prompt\\" = yes ]; then\\n# highlight-next-line\\n    PS1=\'${debian_chroot:+($debian_chroot)}\\\\[\\\\033[01;32m\\\\]\\\\u@\\\\h\\\\[\\\\033[00m\\\\]:\\\\[\\\\033[01;34m\\\\]\\\\w\\\\[\\\\033[35m\\\\]$(parse_git_branch)\\\\[\\\\033[36m\\\\]\\\\$\\\\[\\\\033[00m\\\\] \'\\nelse\\n# highlight-next-line\\n    PS1=\'${debian_chroot:+($debian_chroot)}\\\\u@\\\\h:\\\\w$(parse_git_branch)\\\\$ \'\\nfi\\nunset color_prompt force_color_prompt\\n```\\n  </TabItem>\\n</Tabs>\\n\\n3. To apply the settings, it is necessary to reload the file. We can do this by restarting the terminal or simply reloading the configuration file as below:\\n\\n```sh\\nsource ~/.bashrc\\n```\\n\\n### Values in PS1\\n\\n| **Code** | **Action**                                                         |\\n|----------|--------------------------------------------------------------------|\\n| \\\\u       | User currently logged on the machine;                              |\\n| \\\\h       | Name of the machine (host), previously registered;                 |\\n| \\\\H       | Full machine name, previously registered;                          |\\n| \\\\w       | Full current working directory;                                    |\\n| \\\\W       | Minified current working directory, base name only (last segment); |\\n\\n### Color code\\n\\n|       Color       |     Code     |\\n|-------------------|--------------|\\n| Default (Reset)   | [\\\\033[00m]   |\\n| Red               | [\\\\033[0;31m] |\\n| Fluorescent Red   | [\\\\033[1;31m] |\\n| Green             | [\\\\033[0;32m] |\\n| Fluorescent Green | [\\\\033[1;32m] |\\n| Yellow            | [\\\\033[0;33m] |\\n| Blue              | [\\\\033[0;34m] |\\n| Magenta           | [\\\\033[0;35m] |\\n| Cyan              | [\\\\033[0;36m] |\\n| Gray              | [\\\\033[0;37m] |\\n| Strong White      | [\\\\033[1;37m] |"},{"id":"wsl-and-miniconda","metadata":{"permalink":"/wiki/blog/wsl-and-miniconda","editUrl":"https://github.com/actionanand/wiki/blog/2024-05-25-wsl-miniconda/index.md","source":"@site/blog/2024-05-25-wsl-miniconda/index.md","title":"WSL and Miniconda","description":"WSL","date":"2024-05-25T00:00:00.000Z","tags":[{"label":"wsl","permalink":"/wiki/blog/tags/wsl"},{"label":"conda","permalink":"/wiki/blog/tags/conda"},{"label":"miniconda","permalink":"/wiki/blog/tags/miniconda"},{"label":"anaconda","permalink":"/wiki/blog/tags/anaconda"},{"label":"python","permalink":"/wiki/blog/tags/python"},{"label":"linux","permalink":"/wiki/blog/tags/linux"},{"label":"ubuntu","permalink":"/wiki/blog/tags/ubuntu"},{"label":"bash","permalink":"/wiki/blog/tags/bash"}],"readingTime":10.2,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"wsl-and-miniconda","title":"WSL and Miniconda","authors":"anand","tags":["wsl","conda","miniconda","anaconda","python","linux","ubuntu","bash"]},"unlisted":false,"prevItem":{"title":"Bash terminal customization","permalink":"/wiki/blog/bash-terminal-customization"},"nextItem":{"title":"Kannada via Tamizh part","permalink":"/wiki/blog/Kannada-through-tamizh-part"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\n\\n## <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> WSL </Highlight>\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Install WSL </Highlight>\\n\\nOpen PowerShell or Windows Command Prompt in **administrator** mode by right-clicking and selecting \\"Run as administrator\\", enter the `wsl --install` command, then restart your machine. This command only works if WSL is not installed at all.\\n\\n\x3c!--truncate--\x3e\\n\\n![wsl - windowsWindows Features](./wsl1.png)\\n![wsl - windowsWindows Features](./wsl2.png)\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Change the default Linux distribution installed </Highlight>\\n\\n1. To install additional distributions, enter: `wsl --install -d <Distribution Name>`. Replace `<Distribution Name>` with the name of the distribution you would like to install.\\n2. To see a list of available Linux distributions available for download through the online store, enter: `wsl --list --online` or `wsl -l -o`.\\n3. If you want to install additional distributions **from inside a Linux/Bash** command line (rather than from PowerShell or Command Prompt), you must use `.exe` in the command: `wsl.exe --install -d <Distribution Name>` or to list available distributions: `wsl.exe -l -o`.\\n4. To install a Linux distribution that is not listed as available, you can download from microsoft store. Or you can [import any Linux distribution](https://learn.microsoft.com/en-us/windows/wsl/use-custom-distro) using a TAR file. Or in some cases, [as with Arch Linux](https://wsldl-pg.github.io/ArchW-docs/How-to-Setup/), you can install using an `.appx` file. You can also create your own [custom Linux distribution](https://learn.microsoft.com/en-us/windows/wsl/build-custom-distro) to use with WSL.\\n\\n![wsl - windowsWindows Features](./wsl-win.gif)\\n\\n* [Helper article](https://www.partitionwizard.com/partitionmagic/wsl-not-working-in-windows-11.html), Before proceeding with wsl installation\\n* If you run into an issue during the install process, check the [installation section of the troubleshooting guide](https://learn.microsoft.com/en-us/windows/wsl/troubleshooting#installation-issues).\\n* If you are on earlier versions please see [the manual install page](https://learn.microsoft.com/en-us/windows/wsl/install-manual).\\n\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> wsl1 and wsl2 </Highlight>\\nFire the below commands in Powershell\\n\\n1. To see whether your Linux distribution is set to **WSL 1** or **WSL 2**, use the command: `wsl -l -v`.\\n2. To change versions, use the command: `wsl --set-version <distro name> 2` replacing `<distro name>` with the name of the Linux distribution that you want to update. If you want to change to 1, replace 2 by 1.\\n3. To set the default Linux distribution used with the wsl command, enter: `wsl -s <DistributionName>` or `wsl --set-default <DistributionName>`, replacing `<DistributionName>` with the name of the Linux distribution you would like to use.\\n4. For more basic commands for WSL, [you can visit](https://learn.microsoft.com/en-us/windows/wsl/basic-commands)\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Comparing WSL Versions </Highlight>\\n![wsl - windowsWindows Features](./wsl1-wsl2.webp)\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Checking Ubuntu Version </Highlight>\\nFire the below commands in ubuntu (WSL)\\n\\n1. `lsb_release` Command to Show Ubuntu Versio - Linux Standard Base(LSB)\\n    - `lsb_release -a` (all), `lsb_release -d` (description), `lsb_release -dc`\\n2. `cat /etc/lsb-release` is another way\\n3. `cat /etc/*release` to print full lineup\\n4. `cat /etc/os-release` to display the contents of the os-release file\\n5. `hostnamectl` to show the host machine\u2019s details\\n6. When you connect to a remote machine via SSH, the remote system often prints a message that\u2019s stored in the /etc/issue file. If you have access to the machine, you can display the contents of this file to get the Ubuntu version\\n    - `cat /etc/issue` and `cat /etc/issue.net`\\n7. screenfetch is a very interesting script that displays system information in the terminal. It\u2019s popular because of the concise information output and a great-looking ASCII image.\\n    ```bash\\n    sudo apt install screenfetch -y\\n    screenfetch\\n    ```\\n8. neofetch is a more modern version of the screenfetch Bash script. In addition to showing system information, it also displays a color palette underneath the itemized list.\\n    ```sh\\n    sudo apt install neofetch -y\\n    neofetch\\n    ```\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Checking CPU Information </Highlight>\\n\\n```sh\\nlscpu\\n# or\\ncat /proc/cpuinfo\\n```\\n* Processor Architecture: `uname -m`\\n* Processor Model: `lscpu | grep -i \\"Model name:\\" | cut -d\':\' -f2- -`\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Setting up nodejs with nvm on WSL </Highlight>\\n\\nInstall NVM via bash shell (WSL) as below:\\n\\n```sh\\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\\n```\\n\\n```sh\\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\\n```\\n\\n( Note: instead of v0.38.0 Use the [latest version of nvm from GitHub](https://github.com/nvm-sh/nvm))\\n\\nVerify your installation using\\n\\n```bash\\ncommand -v nvm\\n```\\n\\n* `nvm install --lts` to install the latest LTS, `nvm install node` to install the latest version\\n* `nvm ls` or `nvm list` to check all the installed node versions\\n* `nvm install 12.18.3` or `nvm install 20` to install particular versions\\n* `nvm use 20` to change to node version 20\\n* `nvm ls-remote` to list available versions online to be installed\\n\\n- Set default node version\\n```bash\\nnvm alias default node # this refers to the latest installed version of node\\nnvm alias default 18 # this refers to the latest installed v18.x version of node\\nnvm alias default 18.12  # this refers to the latest installed v18.12.x version of node\\n```\\n\\nFor more help related to [nvm](https://github.com/nvm-sh/nvm#readme) \\n\\nThen we can use node as normally as below:\\n\\n* `npm install --global yarn` or `npm i -g yarn` to install yarn globally\\n* `npm install -g @angular/cli` to install Angular CLI globally\\n* `npm install <package-name> --save-dev` or `npm i -D <package-name>`, `yarn add <package-name> \u2013dev` or `yarn add -D <package-name>` to install package under devDependencies\\n* `npm install` or `npm i` or `yarn install` or `yarn ` to install all dependencies present in `package.json`\\n* consider the below`package.json`.\\n\\n```json\\n{\\n  \\"name\\": \\"wiki\\",\\n  \\"version\\": \\"0.0.0\\",\\n  \\"scripts\\": {\\n    \\"docusaurus\\": \\"docusaurus\\",\\n    \\"start\\": \\"docusaurus start\\",\\n    \\"serve\\": \\"docusaurus serve\\",\\n  }\\n}\\n```\\n    - `npm run serve` or `yarn serve` or `yarn run serve` to execute `serve` command present inside the file. Other commands also follow the same way.\\n\\n## <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> Miniconda </Highlight>\\n\\nSome of the popular virtual environment implementations for Python are:\\n    - [Virtualenv](https://www.youtube.com/watch?v=N5vscPTWKOk), [Conda](https://www.anaconda.com/), [pipenv](https://pipenv.pypa.io/en/latest/), [venv](https://docs.python.org/3/library/venv.html) and several others exist. However the most popular ones are Conda, Pipenv and venv as well. Specifically, Conda is popular amongst Data Scientists whereas pipenv is popular amongst software engineers.\\n    - Conda is a package manager and a virtual environment and it provides the convenience of allowing you to manage what version of Python the virtual environment (and as a result your project) uses as well. So naturally, conda is very convenient and I use it my projects as well.\\n\\n![conda env](./conda.webp)\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Install miniconda </Highlight>\\n\\n1. Download Miniconda Installer\\n```sh\\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /opt/miniconda-installer.sh\\n```\\n\\n```bash\\nsudo wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /opt/miniconda-installer.sh\\n```\\nThe Miniconda installer script has been downloaded and saved as `miniconda-installer.sh` at the location `/opt`\\n\\n2. Install Miniconda\\n\\n```sh\\nbash /opt/miniconda-installer.sh\\n```\\n\\nFollow the instructions shown on the screen. We need to press **ENTER** to review the license agreement. Keep pressing **ENTER** or **SPACE** to finish it. , At the end of the agreement, you will be asked to accept the license terms or not. Type **yes** to accept and continue. And continue till you see ***Thank you for installing Miniconda3!***\\n\\n3. Configure Miniconda\\n\\nAfter the Miniconda installation, we need to apply the changes made to `~/.bashrc` file. Miniconda installer modified the file during the installation. Let\u2019s execute the command.\\n\\n```sh\\nsource ~/.bashrc\\n```\\n\\nNow, at this point, you can run this command to check your Miniconda information.\\n\\n```sh\\nconda info\\n```\\n\\n* `conda install package-name` to install a Python package. So, if you want to install pandas, you can run `conta install pandas`\\n* to exit from the conda environment, `conda deactivate`\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Create conda environment </Highlight>\\nConda centrally manages the environments you create, so, you don\u2019t have to bother about creating a folder for specific environments yourself. You can either start by creating an empty environment or mention the python version and packages you need at the time of creation itself.\\n\\n* Create an empty environment\\n\\n```sh\\nconda create --name {env_name}\\nconda create --name myenv\\n```\\n\\n* Create an environment + specific python version\\n\\n```sh\\nconda create --name {env_name} {python==3.7.5}\\nconda create --name myenv python==3.7.5\\n```\\n\\nThis will also install packages like `pip`, `wheel`, `setuptools`. You can then activate the environment (see below) and\\n\\n* Create an environment + specific Python version + packages\\n\\n```sh\\nconda create --name env_name python==3.7.5 package_name1 package_name2\\n```\\n\\nexample\\n```sh\\nconda create --name myenv python==3.7.5 pandas numpy\\n```\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Activate the environment </Highlight>\\n\\n```sh\\nconda activate {env_name}\\n```\\n\\nTo deactivate whichever you are currently in, use:\\n\\n```sh\\nconda deactivate\\n```\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Install more packages </Highlight>\\n\\nOnce activated you can install more packages using either `conda` or with `pip`.\\n\\nWith Conda\\n```sh\\nconda install pkg_name1==1.x.y pkg_name2==1.x.y\\n```\\n\\nWith pip\\n```sh\\npip install pkg_name2==1.x.y pkg_name2==1.x.y\\n```\\n\\nor install multiple packages from `requirements.txt`.\\n```sh\\npip install -r requirements.txt\\n```\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Channel in Conda </Highlight>\\nA channel is the location where packages are stored remotely.\\nWhen you install Conda for the first time, it comes with a channel called `default`. You can check that using the command below:\\n\\n```sh\\nconda config --show channels\\n```\\n\\n1. To install a package using the `default` channel, you use the `conda install` command followed by the `<package_name>`. That is: `conda install package-name`\\n\\nAlthough numerous packages can be installed from the `default` channel, it\'s possible to come across packages that are not accessible from it.\\n\\nIn cases like this, you\'d usually get the `\\"PackagesNotFoundError: The following channels are not available from current channels\\"` error message.\\n\\n2. How To Install a Package in Conda Using a Channel Name\\n\\n```sh\\nconda install -c some-channel packagename\\n# or\\nconda install some-channel::packagename\\n```\\n\\nexamples\\n```sh\\nconda install -c conda-forge matplotlib\\nconda install scipy --channel conda-forge --channel bioconda\\n```\\nYou may specify multiple channels by passing the argument multiple time\\nPriority decreases from left to right - the first argument is higher priority than the second.\\n\\n* The `-c` or `--channel` flag denotes the word channel.\\n* `conda-forge` denotes the name of the channel where `matplotlib` was installed from.\\n\\n* Although we installed Matplotlib from `conda-forge`, conda-forge will not be added to our list of channels.\\n* So if you run the `conda config --show channels` command, you\'d only see the `default` channel.\\n* You can add a channel to the list of channels using the `conda config --add channels channel-name` command. That is:\\n```sh\\nconda config --add channels conda-forge\\n```\\n\\nThe command above will add `conda-forge` to the list of Conda channels. This means that you don\'t have to specify the channel name if you are installing a package that is available from the `conda-forge` channel.\\n\\nSome of the channels are: [anaconda](https://anaconda.org/anaconda), [conda_forge](https://conda-forge.org/), [r](https://anaconda.org/r), [bioconda](https://bioconda.github.io/) and defaults\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Check the list of packages and environments </Highlight>\\n\\n* See list of environments\\n```sh\\nconda env list\\n# or\\nconda info --envs\\n```\\n\\n* Show list of packages in current environment `conda list`\\n* See list of packages in specific environment `conda list -n myenv`\\n* Rename an existing environment\\n\\n```sh\\nconda rename -n old_env new_env\\n```\\n\\n### <Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> Change \'base\' environment permanently to a different environment \'myenv\' at startup </Highlight>\\n\\n```sh\\nconda create --name myenv\\nconda activate myenv\\necho \\"conda activate myenv\\" >> ~/.bashrc\\n```\\n\\n## <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> Generating a new SSH key </Highlight>\\n\\n1. Open Terminal\\n2. Paste the text below, replacing the email used in the example with your GitHub email address\\n```sh\\nssh-keygen -t ed25519 -C \\"your_email@example.com\\"\\n```\\n*Note*: If you are using a legacy system that doesn\'t support the Ed25519 algorithm, use:\\n```sh\\nssh-keygen -t rsa -b 4096 -C \\"your_email@example.com\\"\\n```\\n3. At the prompt, type a secure passphrase\\n```bash\\n> Enter passphrase (empty for no passphrase): [Type a passphrase]\\n> Enter same passphrase again: [Type passphrase again]\\n```\\n4. Copy the SSH public key to your clipboard\\n```sh\\ncat ~/.ssh/id_ed25519.pub\\n```\\n\\nIf your SSH public key file has a different name than the example code, modify the filename to match your current setup. When copying your key, don\'t add any newlines or whitespace.\\n\\n## <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> Resources </Highlight>\\n\\n1. [How to Install Miniconda on Ubuntu 22.04](https://www.rosehosting.com/blog/how-to-install-miniconda-on-ubuntu-22-04/)\\n2. [Conda create environment and everything you need to know to manage conda virtual environment](https://www.machinelearningplus.com/deployment/conda-create-environment-and-everything-you-need-to-know-to-manage-conda-virtual-environment/)\\n3. [Anaconda change \'base\' environment permanently to a different environment \'myenv\' to startup at terminal openings](https://askubuntu.com/questions/1335235/anaconda-change-base-environment-permanently-to-a-different-environment-myenv)\\n4. [Using default repositories - official](https://docs.anaconda.com/free/working-with-conda/reference/default-repositories/)\\n5. [Explanation of different conda channels - stackoverflow](https://stackoverflow.com/questions/42309333/explanation-of-different-conda-channels)\\n6. [Generating a new SSH key and adding it to the ssh-agent](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)"},{"id":"Kannada-through-tamizh-part","metadata":{"permalink":"/wiki/blog/Kannada-through-tamizh-part","editUrl":"https://github.com/actionanand/wiki/blog/2024-04-12-kannada-tamizh/index.md","source":"@site/blog/2024-04-12-kannada-tamizh/index.md","title":"Kannada via Tamizh part","description":"ECMA International  --\x3e","date":"2024-04-12T00:00:00.000Z","tags":[{"label":"tamil","permalink":"/wiki/blog/tags/tamil"},{"label":"tamizh","permalink":"/wiki/blog/tags/tamizh"},{"label":"kannada","permalink":"/wiki/blog/tags/kannada"}],"readingTime":6.25,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"Kannada-through-tamizh-part","title":"Kannada via Tamizh part","authors":"anand","tags":["tamil","tamizh","kannada"]},"unlisted":false,"prevItem":{"title":"WSL and Miniconda","permalink":"/wiki/blog/wsl-and-miniconda"},"nextItem":{"title":"The Necessary IT Jargon Buster","permalink":"/wiki/blog/computer-jargon"}},"content":"\x3c!-- import Highlight from \'@site/src/components/Highlight\'; --\x3e\\n\\n\x3c!-- <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> ECMA International</Highlight>  --\x3e\\n\\n### Pattern Mapping\\n\\n:::tip\\n* **Pa** in Tamil is equivalent to **Ha** in Kannada [Eg: *Paal - Haalu, Pasi - Hasivu*] and so **Pu** to **Hu** [Eg: *Puli - Huli*], **Pe** to **He** [Eg: *Pen (\u0baa\u0bc6\u0ba3\u0bcd) - Hennu*]\\n* **Vaa** in Tamil is equivalent to **Baa** in Kannada [Eg: *Vaai - Baai*] and so **Ve** to **Be** [Eg: *Venum - Beku, Vendam - Beda, Velli - Belli*], **Vi** to **Bi** [Eg: *Vidu - Bidu*]\\n* The verbs ending with suffix **nga** (to convey respect) in Tamil is equivalent to **i/li** in Kannada, depending on the verb. [Eg: *Sollunga - Heli, Utkarunga - Kuthkoli, Paarunga - Nodi*]\\n* The nouns ending with **am** in Tamil is equivalent to **aa** in Kannada. [Eg: *Artham - Arthaa, Samacharam - Samacharaa, Vishesam - Vishesaa, Paanakkam (\u0baa\u0bbe\u0ba9\u0b95\u0bae\u0bcd) - Paanakka, Varusham - Varushaa*]\\n:::\\n\\n\x3c!--truncate--\x3e\\n\\n### Greetings\\n\\n| **Tamil**        | **Kannada**     | **\u0ba4\u0bae\u0bbf\u0bb4\u0bcd**     | **\u0c95\u0ca8\u0ccd\u0ca8\u0ca1**    |\\n|------------------|-----------------|----------------|--------------|\\n| Varaverpu        | Swagatha        | Vanakkam       | Namask\u0101ra    |\\n| Kaalai Vanakkam  | Shubha mun\u0304j\u0101ne  | Malai Vankkam  | Shubha san\u0304je |\\n| Madhiya Vanakkam | Shubha madhy\u0101na | Iravu Vanakkam | Shubha r\u0101tri |\\n| Nantri           | Dhan\'yav\u0101taga\u1e37u |                |              |\\n\\n### Family\\n\\n| **Tamil** |     **Kannada** |**\u0ba4\u0bae\u0bbf\u0bb4\u0bcd** | **\u0c95\u0ca8\u0ccd\u0ca8\u0ca1** |\\n|-----------|-----------------|-----------|-----------|\\n| Amma      | Amma            | Anna      | Anna      |\\n| Appa      | Appa            | Thambi    | Tam\'ma    |\\n| Akka      | Akka            | Thangai   | Thangi    |\\n| Periyappa | Dhodappa        | Chittappa | Chikkappa |\\n| Periyamma | Dhodamma        | Chitti    | Chikkamma |\\n| Maama     | Maava           | Athai     | Atthe     |\\n\\n### Number\\n\\n| **Tamizh** | **Kannada**     | **\u0ba4\u0bae\u0bbf\u0bb4\u0bcd**| **\u0c95\u0ca8\u0ccd\u0ca8\u0ca1**   | **Tamil** | **\u0b95\u0ba9\u0bcd\u0ba9\u0b9f\u0bbe**   |\\n|------------|-----------------|-----------|-------------|-----------|------------------|\\n| 0          | Sonne           | 1,000     | s\u0101vira      | 10,000    | hatthu   saavira |\\n| 1          | ondu            | 11        | hannondu    | 21        | ippattondu       |\\n| 2          | yeradu          | 12        | hanneradu   | 22        | ippatteradu      |\\n| 3          | mooru           | 13        | hadimooru   | 30        | moovatthu        |\\n| 4          | naalku          | 14        | hadinalku   | 40        | nala\'vattu       |\\n| 5          | aidu            | 15        | hadinaidu   | 50        | aivatthu         |\\n| 6          | aaru            | 16        | hadinaaru   | 60        | aravatthu        |\\n| 7          | aelu            | 17        | hadinelu    | 70        | ep\'pattu         |\\n| 8          | entu            | 18        | hadinentu   | 80        | embatthu         |\\n| 9          | ombatthu        | 19        | hathombattu | 90        | thombatthu       |\\n| 10         | hatthu          | 20        | ippatthu    | 100       | nooru            |\\n| 1,00,000   | laksha          | 10,00,000 | hattulaksha | k\u014ddi      | k\u014d\u1e6di(k\u014ddi)       |\\n\\n### Season\\n\\n| **Tamizh**                            | **Kannada**        | **\u0ba4\u0bae\u0bbf\u0bb4\u0bcd**                        | **\u0c95\u0ca8\u0ccd\u0ca8\u0ca1**             |\\n|---------------------------------------|--------------------|-----------------------------------|------------------------|\\n| Dhinam                                | Dhinaa             | Maasam                            | Maasa                  |\\n| Varusham                              | Varushaa           | Innaiku                           | Ivathu                 |\\n| Nethu<br></br>(Yesterday)             | Ninne              | Naalaiku<br></br>(Tomorrow)        | Naale                 |\\n| Mundhaanaal<br></br>(Day before yesterday) | Monne              | Naalanaal<br></br>(Day after tomorrow) | Naalithu<br></br>(Naaliddu) |\\n\\n### Interrogatives\\n\\n| **English** | **Tamizh** | **Kannada**     |\\n|-------------|------------|-----------------|\\n| What        | Yenna      | Yean\'uu (\u0112nu)   |\\n| Why         | yean       | Yaake           |\\n| When        | Eppo       | yawaga          |\\n| Where       | Enga       | Elli            |\\n| Who         | Yaar       | Yaaru           |\\n| How         | Eppidi     | Hege            |\\n\\n### Subjective Pronouns\\n\\n| **English** | **Tamizh**   |     **Kannada** |\\n|-------------|--------------|-----------------|\\n| I           | Naan         | Naanu           |\\n| We          | Naanga       | Naavu           |\\n| You         | Nee / Neenga | Neenu / Neevu   |\\n| He          | Avan         | Avanu / Avaru   |\\n| She         | Aval         | Avalu / Avaru   |\\n| This        | Adhu         | Adhu            |\\n| That        | Idhu         | Idhu            |\\n\\n### Possessive Pronouns\\n\\n| **English** | **Tamizh**         | **Kannada**                      |\\n|-------------|--------------------|----------------------------------|\\n| Mine        | Enadhu             | Nan\'nadhu                        |\\n| Ours        | Namadhu            | Nam\'madhu                        |\\n| Yours       | Unadhu / Ungaladhu | Nin\'nadhu / Nim\'madhu (Tam\'madu) |\\n| His         | Avanadhu           | Avandhu / Avardhu                |\\n| Hers        | Avaladhu           | Avaldhu / Avardhu                |\\n\\n### Nouns\\n\\n|       | **English** | **Tamizh** | **Kannada** |        | **English** |   **\u0ba4\u0bae\u0bbf\u0bb4\u0bcd**  | **\u0c95\u0ca8\u0ccd\u0ca8\u0ca1** |\\n|-------|:-----------:|:----------:|:-----------:|:------:|:-----------:|:-----------:|:--------:|\\n| **1** | Breakfast   | Saapadu    | Thindi      | **9**  | Leg         | Kaal        | Kaalu    |\\n| **2** | Lunch       | Saapadu    | Oota        | **10** | Nose        | Mooku       | Moogu    |\\n| **3** | Dinner      | Saapadu    | Oota        | **11** | Truth       | Unmai/Nijam | Nijaa    |\\n| **4** | Hunger      | Pasi       | Hasivu      | **12** | Lie         | Poi         | Sullu    |\\n| **5** | Water       | Thanni     | Neeru       | **13** | Yes         | Aama        | Houdhu   |\\n| **6** | Milk        | Paal       | Haalu       | **14** | No          | Illa        | Illa     |\\n| **7** | Vehicle     | Vandi      | Gaadi       | **15** | Boy         | Payan       | Huduga   |\\n| **8** | Hand        | Kai        | Kai         | **16** | Girl        | Ponnu       | Hudugi   |\\n\\n### Verbs\\n\\n|        | **English** |     **Tamizh**     |      **Kannada**      |        | **English** |       **\u0ba4\u0bae\u0bbf\u0bb4\u0bcd**       |        **\u0c95\u0ca8\u0ccd\u0ca8\u0ca1**       |\\n|--------|:-----------:|:------------------:|:---------------------:|:------:|:-----------:|:--------------------:|:---------------------:|\\n| **1**  | Is          | Iruku              | Idhe                  | **11** | Read        | Padi                 | Odhu                  |\\n| **2**  | Know        | Theriyum           | Gothu                 | **12** | See         | Paaru/Paarunga       | Nodu/Nodi             |\\n| **3**  | Don\'t know  | Theiyadhu          | Gothilla              | **13** | Take        | Edu/<br></br>Eduthukonga  | Tago/<br></br>Tagoli       |\\n| **4**  | Want        | Venum              | Beku                  | **14** | Keep        | Vai/Vainga           | Irisiko/<br></br>Irisikoli |\\n| **5**  | Don\'t want  | Vendam             | Beda                  | **15** | Put         | Podu/Podunga         | Haaku/Haaki           |\\n| **6**  | Tell        | Sollu/<br></br>Sollunga | Helu/Heli             | **16** | Stop        | Nil                  | Nillu                 |\\n| **7**  | Speak       | Pesu/<br></br>Pesunga   | Maathadu/<br></br>Maathadi | **17** | Give        | Kodu/Kodunga         | Kodu/Kodi             |\\n| **8**  | Come        | Vaa/<br></br>Vaanga     | Baa/<br></br>Banni/Banri   | **18** | Sit         | Utkaru/<br></br>Utkarunga | Kuthko/<br></br>Kuthkoli   |\\n| **9**  | Go          | Po/Ponga           | Hogu/Hogi             | **19** |             |                      |                       |\\n| **10** | Listen      | Kelu/<br></br>Kelunga   | Kelu/Keli             | **20** |             |                      |                       |\\n\\n### Preposition\\n\\n| **English** |   **Tamizh**  |  **Kannada** |\\n|:-----------:|:-------------:|:------------:|\\n| With        | Kooda         | Jothe        |\\n| To          | Ku            | Ge           |\\n| For         | Kaga          | Ge           |\\n| From/To     | Irundhu/Varai | Indha/Varegu |\\n\\n### Adjectives and adverbs\\nAn adjective is a word that **describes a noun**. In other words, it tells us more about a particular person, place, or thing.\\n\\n![chicken or egg](./adj_cupcake3.png)\\n\\nAn adverb is a word that **describes a verb**. Just like adjectives, adverbs are used to add detail to a sentence. More specifically, adverbs tell us **how**, **when**, or **where** something happened.\\n\\n![chicken or egg](./adj_deeply.png)\\n\\n| **English** | **Tamizh** | **Kannada** |\\n|:-----------:|:----------:|:-----------:|\\n| Sure        | Kandippa   | Kanditta    |\\n| Little      | Konjam     | Swalpa      |\\n| Lot         | Romba      | Thumba      |\\n| Far         | Dooram     | Doora       |\\n| Near        | Kitta      | Hatra       |\\n| More        | Adhigam    | Jasthi      |\\n| Less        | Kammi      | Kadimi      |\\n| Above       | Mela       | Mele        |\\n| Below       | Kela       | Kelagade    |\\n| Fast        | Vegam      | Bega        |\\n| Slow        | Nidhanam   | Nidhana     |\\n| Front       | Munnadi    | Mundhe      |\\n| Back        | Pinnadi    | Hindhe      |\\n| Here        | Inga       | Illi        |\\n| There       | Anga       | Alli        |\\n| Then        | Aprom      | Mathe       |\\n\\n### Resources\\n\\n1. [What are the simple shortcuts to learn a passable Kannada for a Tamil speaker?](https://www.quora.com/What-are-the-simple-shortcuts-to-learn-a-passable-Kannada-for-a-Tamil-speaker)"},{"id":"computer-jargon","metadata":{"permalink":"/wiki/blog/computer-jargon","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-29-computer-jargon.md","source":"@site/blog/2024-02-29-computer-jargon.md","title":"The Necessary IT Jargon Buster","description":"ECMA International  - An organization that creates standards for technologies.","date":"2024-02-29T00:00:00.000Z","tags":[{"label":"acronym","permalink":"/wiki/blog/tags/acronym"},{"label":"abbreviation","permalink":"/wiki/blog/tags/abbreviation"},{"label":"glossary","permalink":"/wiki/blog/tags/glossary"}],"readingTime":1.7,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"computer-jargon","title":"The Necessary IT Jargon Buster","authors":"anand","tags":["acronym","abbreviation","glossary"]},"unlisted":false,"prevItem":{"title":"Kannada via Tamizh part","permalink":"/wiki/blog/Kannada-through-tamizh-part"},"nextItem":{"title":"Kuruntokai - Verse 02","permalink":"/wiki/blog/kuruntokai-verse-2"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> ECMA International</Highlight>  - An organization that creates standards for technologies.\\n\\n:::note[ECMAScript]\\nThe specification defined in `ECMA-262` for creating a general purpose scripting language.<br></br>\\n<Highlight color=\'#C0C0C0\'>Synonym</Highlight> - ECMAScript specification\\n:::\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> ECMA-262</Highlight>  - This is a standard published by <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>Ecma International</Highlight>. It contains the specification for a general purpose scripting language. While ECMA-262 is the name of the standard, it represents the scripting language specification ECMAScript. ECMAScript provides the rules, details, and guidelines that a scripting language must observe to be considered ECMAScript compliant.\\n\x3c!--truncate--\x3e\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> JavaScript</Highlight> - A general purpose scripting language that conforms to the ECMAScript specification.\\n\\nBy reading the [ECMAScript](https://ecma-international.org/publications-and-standards/standards/ecma-262/) specification, you learn <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>how to create a scripting language.</Highlight> <br></br> By reading the [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) documentation, you learn <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>how to use a scripting language.</Highlight>\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> JavaScript engine</Highlight> - A program or interpreter that understands and executes JavaScript code.\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> JavaScript runtime</Highlight> - The environment in which the JavaScript code runs and is interpreted by a JavaScript engine. The runtime provides the host objects that JavaScript can operate on and work with.\\n\\n<Highlight color=\'#C0C0C0\'>Synonym</Highlight> - Host environment\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> ECMAScript 6</Highlight> - It is the <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>sixth edition of the **ECMA-262** standard</Highlight>, and features major changes and improvements to the ECMAScript specification.\\n\\n<Highlight color=\'#C0C0C0\'>Synonym</Highlight> - ES6, ES2015, and ECMAScript 2015\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'>Babel</Highlight> - A transpiler that can convert <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>ES6 code to ES5 code</Highlight>.\\n\\n:::info[One more interesting tidbit]\\nA confusing bit of history is that JavaScript was created in 1996. It was then submitted to Ecma International in 1997 for standardization, which resulted in ECMAScript. At the same time, because JavaScript conformed to the ECMAScript specification, JavaScript is an example of an ECMAScript implementation.\\n\\nThat leaves us with this fun fact: ***ECMAScript is based on JavaScript***, and ***JavaScript is based on ECMAScript***.\\n:::\\n\\n### Resources\\n\\n1. [What\u2019s the difference between JavaScript and ECMAScript?](https://www.freecodecamp.org/news/whats-the-difference-between-javascript-and-ecmascript-cba48c73a2b5/)"},{"id":"kuruntokai-verse-2","metadata":{"permalink":"/wiki/blog/kuruntokai-verse-2","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-19-kuruntokai-verse-2/index.mdx","source":"@site/blog/2024-02-19-kuruntokai-verse-2/index.mdx","title":"Kuruntokai - Verse 02","description":"\u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1 \u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8","date":"2024-02-19T00:00:00.000Z","tags":[{"label":"tamil","permalink":"/wiki/blog/tags/tamil"},{"label":"tamizh","permalink":"/wiki/blog/tags/tamizh"},{"label":"poem","permalink":"/wiki/blog/tags/poem"}],"readingTime":2.46,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"kuruntokai-verse-2","title":"Kuruntokai - Verse 02","authors":"anand","tags":["tamil","tamizh","poem"]},"unlisted":false,"prevItem":{"title":"The Necessary IT Jargon Buster","permalink":"/wiki/blog/computer-jargon"},"nextItem":{"title":"Browser Engines - Digest","permalink":"/wiki/blog/browser-engines"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\n\\n### <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1 \u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8 </Highlight>\\n\\n<Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> 2. \u0b95\u0bc1\u0bb1\u0bbf\u0b9e\u0bcd\u0b9a\u0bbf </Highlight> <Highlight color=\'#004080\' highlight=\'fg\'> - \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b95\u0bc2\u0bb1\u0bcd\u0bb1\u0bc1 </Highlight>\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'center\'>\\n  \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1 \u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8 \u0b85\u0b9e\u0bcd\u0b9a\u0bbf\u0bb1\u0bc8\u0ba4\u0bcd \u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf! <br></br>\\n  \u0b95\u0bbe\u0bae\u0bae\u0bcd \u0b9a\u0bc6\u0baa\u0bcd\u0baa\u0bbe\u0ba4\u0bc1, \u0b95\u0ba3\u0bcd\u0b9f\u0ba4\u0bc1 \u0bae\u0bca\u0bb4\u0bbf\u0bae\u0bcb: <br></br>\\n  \u0baa\u0baf\u0bbf\u0bb2\u0bbf\u0baf\u0ba4\u0bc1 \u0b95\u0bc6\u0bb4\u0bc0\u0b87\u0baf \u0ba8\u0b9f\u0bcd\u0baa\u0bbf\u0ba9\u0bcd, \u0bae\u0baf\u0bbf\u0bb2\u0bcd \u0b87\u0baf\u0bb2\u0bcd, <br></br>\\n  \u0b9a\u0bc6\u0bb1\u0bbf \u0b8e\u0baf\u0bbf\u0bb1\u0bcd\u0bb1\u0bc1, \u0b85\u0bb0\u0bbf\u0bb5\u0bc8 \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bbf\u0ba9\u0bcd <br></br>\\n  \u0ba8\u0bb1\u0bbf\u0baf\u0bb5\u0bc1\u0bae\u0bcd \u0b89\u0bb3\u0bb5\u0bcb, \u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0baf\u0bc1\u0bae\u0bcd \u0baa\u0bc2\u0bb5\u0bc7? <br></br>\\n</Highlight>\\n\\n<Highlight color=\'#531A02\' highlight=\'fg\'>\\n  \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baa\u0bcd \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0b9a\u0bcd\u0b9a\u0bbf \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0ba8\u0bcd\u0ba4\u0bb5\u0bb4\u0bbf, \u0ba4\u0bb2\u0bc8\u0bae\u0b95\u0bb3\u0bc8 \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baa\u0bcd \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0b9a\u0bcd\u0b9a\u0bbf\u0b95\u0bcd\u0b95\u0ba3\u0bcd \u0b87\u0b9f\u0bc8\u0baf\u0bc0\u0b9f\u0bc1\u0baa\u0b9f\u0bcd\u0b9f\u0bc1 \u0ba8\u0bbf\u0ba9\u0bcd\u0bb1 \\n  \u0ba4\u0bb2\u0bc8\u0bae\u0b95\u0ba9\u0bcd, \u0ba8\u0bbe\u0ba3\u0bbf\u0ba9\u0bcd \u0ba8\u0bc0\u0b95\u0bcd\u0b95\u0bc1\u0ba4\u0bb1\u0bcd\u0baa\u0bca\u0bb0\u0bc1\u0b9f\u0bcd\u0b9f\u0bc1, \u0bae\u0bc6\u0baf\u0bcd \u0ba4\u0bca\u0b9f\u0bcd\u0b9f\u0bc1\u0baa\u0bcd \u0baa\u0baf\u0bbf\u0bb1\u0bb2\u0bcd \u0bae\u0bc1\u0ba4\u0bb2\u0bbe\u0baf\u0bbf\u0ba9 \u0b85\u0bb5\u0bb3\u0bcd\u0bae\u0bbe\u0b9f\u0bcd\u0b9f\u0bc1 \u0ba8\u0bbf\u0b95\u0bb4\u0bcd\u0ba4\u0bcd\u0ba4\u0bbf\u0b95\\n</Highlight>\\n\\n<Highlight color=\'#351C75\' highlight=\'format\' textAlign=\'right\'> \u0b95\u0bc1\u0bb1\u0bc1\u0ba8\u0bcd\u0ba4\u0bca\u0b95\u0bc8 - 02 </Highlight>\\n<Highlight color=\'#351C75\' highlight=\'format\' textAlign=\'right\'> \u0baa\u0bbe\u0b9f\u0bbf\u0baf\u0bb5\u0bb0\u0bcd - \u0b87\u0bb1\u0bc8\u0baf\u0ba9\u0bbe\u0bb0\u0bcd </Highlight>\\n\\n\x3c!--truncate--\x3e\\n\\n<br></br>\\n<Highlight color=\'#25c2a0\'>\u0b95\u0bb0\u0bc1\u0ba4\u0bcd\u0ba4\u0bc1:</Highlight> \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baa\u0bcd \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0b9a\u0bcd\u0b9a\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0baa\u0bcd (\u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bc8\u0ba4\u0bcd \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b87\u0baf\u0bb2\u0bcd\u0baa\u0bbe\u0b95\u0baa\u0bcd \u0baa\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc1\u0b95\u0bcd \u0b95\u0bbe\u0ba4\u0bb2\u0bcd \u0b95\u0bca\u0bb3\u0bcd\u0bb3\u0bc1\u0ba4\u0bb2\u0bcd) \u0baa\u0bbf\u0ba9\u0bcd\u0ba9\u0bb0\u0bcd \u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bc8\u0b9a\u0bcd \u0b9a\u0ba8\u0bcd\u0ba4\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b85\u0bb5\u0bb3\u0bbf\u0ba9\u0bcd \u0ba8\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bc8 \u0ba8\u0bc0\u0b95\u0bcd\u0b95\u0bc1\u0ba4\u0bb2\u0bcd \u0baa\u0bca\u0bb0\u0bc1\u0b9f\u0bcd\u0b9f\u0bc1, \u0bae\u0bc6\u0baf\u0bcd\u0ba4\u0bca\u0b9f\u0bcd\u0b9f\u0bc1\u0baa\u0bcd \u0baa\u0baf\u0bbf\u0ba9\u0bcd\u0bb1\u0bc1 (\u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bbf\u0ba9\u0bcd \u0b89\u0b9f\u0bb2\u0bcd \u0ba4\u0bca\u0b9f\u0bcd\u0b9f\u0bc1 \u0b89\u0bb0\u0bc8\u0baf\u0bbe\u0b9f\u0bb2\u0bcd) \u0ba8\u0bb2\u0bae\u0bcd \u0baa\u0bbe\u0bb0\u0bbe\u0b9f\u0bcd\u0b9f\u0bc1\u0ba4\u0bb2\u0bcd ( \u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bbf\u0ba9\u0bcd \u0b85\u0bb4\u0b95\u0bc1 \u0ba8\u0bb2\u0ba4\u0bcd\u0ba4\u0bc8\u0baa\u0bcd \u0baa\u0bbe\u0b9f\u0bc1\u0ba4\u0bb2\u0bcd)\\n\\n\u0ba4\u0bb2\u0bc8\u0bb5\u0bbf \u0ba8\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bcb\u0b9f\u0bc1 \u0b87\u0bb0\u0bc1\u0baa\u0bcd\u0baa\u0ba4\u0bc8 \u0b89\u0ba3\u0bb0\u0bcd\u0ba8\u0bcd\u0ba4 \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b85\u0bb5\u0bb3\u0bbf\u0ba9\u0bcd \u0ba8\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bc8 \u0ba8\u0bc0\u0b95\u0bcd\u0b95 \u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf\u0baf\u0bc8\u0baa\u0bcd \u0baa\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc1\u0baa\u0bcd \u0baa\u0bc7\u0b9a\u0bc1\u0b95\u0bbf\u0bb1\u0bbe\u0ba9\u0bcd.\\n\u0baa\u0bc2\u0b95\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd \u0b89\u0bb3\u0bcd\u0bb3 \u0bae\u0ba3\u0ba4\u0bcd\u0ba4\u0bc8 \u0b86\u0bb0\u0bbe\u0baf\u0bcd\u0ba8\u0bcd\u0ba4\u0bc1 \u0ba4\u0bc7\u0ba9\u0bc8 \u0b89\u0ba3\u0bcd\u0ba3\u0bc1\u0b95\u0bbf\u0ba9\u0bcd\u0bb1 \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bc8\u0baf\u0bbf\u0ba9\u0bc8\u0baf\u0bc1\u0bae\u0bcd, \u0b85\u0b95\u0ba4\u0bcd\u0ba4\u0bc7 \u0b9a\u0bbf\u0bb1\u0b95\u0bc1\u0b95\u0bb3\u0bc8\u0baf\u0bc1\u0bae\u0bcd \u0b95\u0bca\u0ba3\u0bcd\u0b9f \u0bb5\u0ba3\u0bcd\u0b9f\u0bc7!\\n\\n\u0b8e\u0ba9\u0b95\u0bcd\u0b95\u0bc1 \u0b87\u0ba9\u0bcd\u0baa\u0bae\u0bcd \u0ba4\u0bb0\u0bc1\u0bb5\u0ba4\u0bb1\u0bcd\u0b95\u0bbe\u0b95\u0baa\u0bcd \u0baa\u0bca\u0baf\u0bcd \u0b95\u0bc2\u0bb1\u0bbe\u0bae\u0bb2\u0bcd, \u0ba8\u0bc0 \u0b89\u0ba3\u0bcd\u0bae\u0bc8\u0baf\u0bc6\u0ba9 \u0b85\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0b92\u0ba9\u0bcd\u0bb1\u0bc8 \u0b8e\u0ba9\u0bcd \u0b95\u0bc7\u0bb3\u0bcd\u0bb5\u0bbf\u0b95\u0bcd\u0b95\u0bc1 \u0bb5\u0bbf\u0b9f\u0bc8\u0baf\u0bbe\u0b95\u0ba4\u0bcd \u0ba4\u0bb0\u0bc1\u0bb5\u0bbe\u0baf\u0bbe\u0b95,\\n\\n\u0baa\u0bb4\u0b95\u0bc1\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0b87\u0ba9\u0bbf\u0baf, \u0bae\u0baf\u0bbf\u0bb2\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0ba9\u0bcd\u0bb1 \u0b9a\u0bbe\u0baf\u0bb2\u0bc8\u0baf\u0bc1\u0bae\u0bcd, \u0b9a\u0bc6\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0baa\u0bb1\u0bcd\u0b95\u0bb3\u0bc8\u0baf\u0bc1\u0bae\u0bcd \u0b89\u0b9f\u0bc8\u0baf \u0b87\u0bb5\u0bcd\u0bb5\u0bb0\u0bbf\u0bb5\u0bc8\u0baf\u0bbf\u0ba9\u0bcd \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0ba9\u0bcd\u0bb1 \u0bae\u0ba3\u0bae\u0bcd \u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0bae\u0bb2\u0bb0\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0b89\u0ba3\u0bcd\u0b9f\u0bbe..?\\n\\n### \u0b9a\u0bca\u0bb1\u0bcd\u0b95\u0bb3\u0b9e\u0bcd\u0b9a\u0bbf\u0baf\u0bae\u0bcd\\n\\n**\u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1** - \u0baa\u0bc2\u0bb5\u0bbf\u0ba9\u0bcd \u0bae\u0b95\u0bb0\u0ba8\u0bcd\u0ba4\u0bae\u0bcd <br></br>\\n**\u0ba4\u0bc7\u0bb0\u0bcd** - \u0ba4\u0bc7\u0bb0\u0bcd\u0ba8\u0bc6\u0b9f\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd <br></br>\\n**\u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8** - \u0bb5\u0bbe\u0bb4\u0bc1\u0bae\u0bcd <br></br>\\n**\u0b85\u0b9e\u0bcd\u0b9a\u0bbf\u0bb1\u0bc8\u0ba4\u0bcd\u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf** - \u0b89\u0bb3\u0bcd\u0bb3\u0bc7 \u0b9a\u0bbf\u0bb1\u0b95\u0bc1\u0b95\u0bb3\u0bc8 \u0b89\u0b9f\u0bc8\u0baf \u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf(\u0bb5\u0ba3\u0bcd\u0b9f\u0bc1) - (**\u0b85\u0bae\u0bcd \u0b9a\u0bbf\u0bb1\u0bc8** - \u0b85\u0bb4\u0b95\u0bbf\u0baf \u0b9a\u0bbf\u0bb1\u0b95\u0bc1\u0b95\u0bb3\u0bcd) <br></br>\\n**\u0b95\u0bbe\u0bae\u0bae\u0bcd \u0b9a\u0bc6\u0baa\u0bcd\u0baa\u0bbe\u0ba4\u0bc1** - \u0ba8\u0bbe\u0ba9\u0bcd \u0bb5\u0bbf\u0bb0\u0bc1\u0bae\u0bcd\u0baa\u0bbf\u0baf\u0ba4\u0bc8\u0b9a\u0bcd \u0b9a\u0bca\u0bb2\u0bcd\u0bb2\u0bbe\u0ba4\u0bc1 <br></br>\\n**\u0b95\u0ba3\u0bcd\u0b9f\u0ba4\u0bc1 \u0bae\u0bca\u0bb4\u0bbf\u0bae\u0bcb** - \u0ba8\u0bc0 \u0b95\u0ba3\u0bcd\u0b9f\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4\u0ba4\u0bc8\u0b95\u0bcd \u0b95\u0bc2\u0bb1\u0bc1 <br></br>\\n**\u0baa\u0baf\u0bb2\u0bbf\u0baf\u0ba4\u0bc1 \u0b95\u0bc6\u0bb4\u0bc0\u0baf \u0ba8\u0b9f\u0bcd\u0baa\u0bbf\u0ba9\u0bcd** - \u0baa\u0bb2 \u0baa\u0bbf\u0bb1\u0bb5\u0bbf\u0b95\u0bb3\u0bbf\u0bb2\u0bc1\u0bae\u0bcd \u0ba8\u0b9f\u0bcd\u0baa\u0bc1\u0b9f\u0ba9\u0bcd \u0bb5\u0bbf\u0bb3\u0b99\u0bcd\u0b95\u0bc1\u0bae\u0bcd(\u0b95\u0bc6\u0bb4\u0bbf-\u0ba8\u0b9f\u0bcd\u0baa\u0bc1) <br></br>\\n**\u0bae\u0baf\u0bbf\u0bb2\u0bbf\u0baf\u0bb2\u0bcd** - \u0bae\u0baf\u0bbf\u0bb2\u0bcd \u0baa\u0bcb\u0ba9\u0bcd\u0bb1 <br></br>\\n**\u0b9a\u0bc6\u0bb1\u0bbf\u0baf\u0bbf\u0baf\u0bc6\u0bb1\u0bcd \u0bb1\u0bb0\u0bbf\u0bb5\u0bc8** - \u0b9a\u0bc6\u0bb1\u0bbf\u0bb5\u0bbe\u0ba9 \u0baa\u0bb1\u0bcd\u0b95\u0bb3\u0bc8\u0b95\u0bcd(\u0b8e\u0baf\u0bbf\u0bb1\u0bc1) \u0b95\u0bca\u0ba3\u0bcd\u0b9f \u0baa\u0bc6\u0ba3\u0bcd <br></br>\\n**\u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bbf\u0ba9\u0bcd** - \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bc8 \u0bb5\u0bbf\u0b9f <br></br>\\n**\u0ba8\u0bb1\u0bbf\u0baf\u0bb5\u0bc1\u0bae\u0bcd \u0b89\u0bb3\u0bb5\u0bcb** - \u0bae\u0ba3\u0bae\u0bbf\u0b95\u0bc1\u0ba8\u0bcd\u0ba4 \u0b8f\u0ba4\u0bc7\u0ba9\u0bc1\u0bae\u0bcd \u0b89\u0bb3\u0bcd\u0bb3\u0ba4\u0bcb <br></br>\\n**\u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0baf\u0bc1\u0bae\u0bcd \u0baa\u0bc2\u0bb5\u0bc7** - \u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0baa\u0bc2\u0b95\u0bcd\u0b95\u0bb3\u0bbf\u0b9f\u0bae\u0bcd <br></br>\\n\\n\u0ba4\u0bbf\u0bb0\u0bc1\u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bbe\u0b9f\u0bb1\u0bcd \u0baa\u0bc1\u0bb0\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bc1\u0bae\u0bcd(<Highlight color=\'#25c2a0\' highlight=\'fg\'>\u0ba4\u0bb0\u0bc1\u0bae\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0baa\u0bcd \u0baa\u0bca\u0bb1\u0bcd\u0b95\u0bbf\u0bb4\u0bbf \u0b85\u0bb3\u0bbf\u0ba4\u0bcd\u0ba4 \u0baa\u0b9f\u0bb2\u0bae\u0bcd</Highlight>) \u0b87\u0ba8\u0bcd\u0ba4\u0baa\u0bcd \u0baa\u0bbe\u0b9f\u0bb2\u0bcd \u0bae\u0bc7\u0bb1\u0bcd\u0b95\u0bcb\u0bb3\u0bcd \u0b95\u0bbe\u0b9f\u0bcd\u0b9f\u0baa\u0bcd\u0baa\u0b9f\u0bc1\u0b95\u0bbf\u0bb1\u0ba4\u0bc1. \u0b9a\u0bc6\u0ba3\u0bcd\u0baa\u0b95\u0baa\u0bcd \u0baa\u0bbe\u0ba3\u0bcd\u0b9f\u0bbf\u0baf\u0ba9\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0b8f\u0bb1\u0bcd\u0baa\u0b9f\u0bcd\u0b9f \u0b90\u0baf\u0ba4\u0bcd\u0ba4\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0b95\u0bcd\u0b95 \u0b87\u0bb1\u0bc8\u0bb5\u0ba9\u0bcd \u0ba4\u0bb0\u0bc1\u0bae\u0bbf \u0bae\u0bc2\u0bb2\u0bae\u0bcd \u0b95\u0bca\u0b9f\u0bc1\u0ba4\u0bcd\u0ba4\u0ba9\u0bc1\u0baa\u0bcd\u0baa\u0bbf\u0baf \u0baa\u0bbe\u0b9f\u0bb2\u0bcd.\\n\\n![chicken or egg](./smell-in-girls-hair.jpg)\\n\\n(\u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b87\u0bb1\u0bc8\u0bb5\u0ba9\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b87\u0b9f\u0bc8\u0baf\u0bbe\u0ba9 \u0b89\u0bb0\u0bc8\u0baf\u0bbe\u0b9f\u0bb2\u0bbf\u0ba9\u0bcd \u0b9a\u0bbf\u0bb1\u0bc1\u0baa\u0b95\u0bc1\u0ba4\u0bbf  \u0b95\u0bc0\u0bb4\u0bcd\u0bb5\u0bb0\u0bc1\u0bae\u0bbe\u0bb1\u0bc1)\\n\\n\u0baa\u0bbe\u0ba3\u0bcd\u0b9f\u0bbf\u0baf\u0ba9\u0bcd \u0b85\u0bb5\u0bc8\u0baf\u0bbf\u0bb2\u0bcd \u2018\u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1\u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8\u2019 \u0b8e\u0ba9\u0bcd\u0ba9\u0bc1\u0bae\u0bcd \u0b9a\u0bc6\u0baf\u0bcd\u0baf\u0bc1\u0bb3\u0bbf\u0ba9\u0bcd \u0baa\u0bca\u0bb0\u0bc1\u0bb3\u0bcd \u0b95\u0bc1\u0bb1\u0bbf\u0ba4\u0bcd\u0ba4\u0bc1\u0b9a\u0bcd \u0b9a\u0b99\u0bcd\u0b95\u0baa\u0bcd \u0baa\u0bc1\u0bb2\u0bb5\u0bb0\u0bbe\u0b95 \u0bb5\u0ba8\u0bcd\u0ba4 \u0b9a\u0bbf\u0bb5\u0baa\u0bc6\u0bb0\u0bc1\u0bae\u0bbe\u0ba9\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd, \u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b92\u0bb0\u0bc1 \u0bb5\u0bbe\u0ba4\u0bae\u0bcd \u0ba8\u0bbf\u0b95\u0bb4\u0bcd\u0ba8\u0bcd\u0ba4\u0ba4\u0bc1. \u0b85\u0baa\u0bcd\u0baa\u0bcb\u0ba4\u0bc1 \u0b9a\u0bbf\u0bb5\u0baa\u0bc6\u0bb0\u0bc1\u0bae\u0bbe\u0ba9\u0bcd \u0b95\u0bc2\u0bb1\u0bbf\u0baf\u0ba4\u0bbe\u0b95 \u0bb5\u0bb0\u0bc1\u0bae\u0bcd \u0bb5\u0bc6\u0ba3\u0bcd\u0baa\u0bbe:\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'center\'>\\n  \u0b85\u0b99\u0bcd\u0b95\u0b99\u0bcd \u0b95\u0bc1\u0bb2\u0bc1\u0b99\u0bcd\u0b95 \u0b85\u0bb0\u0bbf\u0bb5\u0bbe\u0bb3\u0bbf\u0bb2\u0bcd \u0ba8\u0bc6\u0baf\u0bcd\u0ba4\u0b9f\u0bb5\u0bbf\u0baa\u0bcd <br></br>\\n  \u0baa\u0b99\u0bcd\u0b95\u0bae\u0bcd \u0baa\u0b9f\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bc1 \u0b95\u0bbe\u0bb2\u0bcd\u0baa\u0bb0\u0baa\u0bcd\u0baa\u0bbf\u0b9a\u0bcd - \u0b9a\u0b99\u0bcd\u0b95\u0bc8\u0b95\u0bcd <br></br>\\n  \u0b95\u0bc0\u0bb0\u0bcd\u0b95\u0bc0\u0bb0\u0bcd \u0b8e\u0ba9 \u0b85\u0bb1\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b95\u0bc0\u0bb0\u0ba9\u0bcb \u0b8e\u0ba9\u0bcd\u0b95\u0bb5\u0bbf\u0baf\u0bc8 <br></br>\\n  \u0b86\u0bb0\u0bbe\u0baf\u0bcd\u0ba8\u0bcd\u0ba4\u0bc1 \u0b9a\u0bca\u0bb2\u0bcd\u0bb2 \u0ba4\u0b95\u0bcd\u0b95\u0bb5\u0ba9\u0bcd <br></br>\\n</Highlight>\\n\\n\u0b87\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bcd \u0baa\u0bbf\u0ba9\u0bcd\u0bb5\u0bb0\u0bc1\u0bae\u0bcd \u0b9a\u0bc6\u0baf\u0bcd\u0baf\u0bc1\u0bb3\u0bbe\u0bb2\u0bcd \u0bb5\u0bbf\u0b9f\u0bc8\u0baf\u0bbf\u0bb1\u0bc1\u0ba4\u0bcd\u0ba4\u0bbe\u0bb0\u0bcd.\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'center\'>\\n  \u0b9a\u0b99\u0bcd\u0b95\u0bb1\u0bc1\u0baa\u0bcd\u0baa \u0ba4\u0bc6\u0b99\u0bcd\u0b95\u0bb3\u0bcd\u0b95\u0bc1\u0bb2\u0bae\u0bcd \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0ba9\u0bbe\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bc1 \u0b8f\u0ba4\u0bc1\u0b95\u0bc1\u0bb2\u0bae\u0bcd <br></br>\\n  \u0baa\u0b99\u0bcd\u0b95\u0bae\u0bc1\u0bb1\u0b9a\u0bcd \u0b9a\u0bca\u0ba9\u0bcd\u0ba9\u0bbe\u0bb2\u0bcd \u0baa\u0bb4\u0bc1\u0ba4\u0bbe\u0bae\u0bcb - \u0b9a\u0b99\u0bcd\u0b95\u0bc8 <br></br>\\n  \u0b85\u0bb0\u0bbf\u0ba8\u0bcd\u0ba4\u0bc1\u0ba3\u0bcd\u0b9f\u0bc1 \u0bb5\u0bbe\u0bb4\u0bcd\u0bb5\u0bcb\u0bae\u0bcd \u0b85\u0bb0\u0ba9\u0bbe\u0bb0\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0bb2 <br></br>\\n  \u0b87\u0bb0\u0ba8\u0bcd\u0ba4\u0bc1\u0ba3\u0bcd\u0b9f\u0bc1 \u0bb5\u0bbe\u0bb4\u0bcd\u0bb5 \u0ba4\u0bbf\u0bb2\u0bc8 <br></br>\\n</Highlight>\\n\\n<iframe width=\\"100%\\" height=\\"315\\" \\n  src=\\"https://www.youtube.com/embed/_Bd_9aan9_4?si=g5tuA1gR55lVBvIV&amp;start=281\\" \\n  title=\\"YouTube video player\\" frameborder=\\"0\\" \\n  allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" \\n  allowfullscreen\\n  >\\n</iframe>\\n\\n### \u0bae\u0bc7\u0bb1\u0bcd\u0b95\u0bcb\u0bb3\u0bcd\u0b95\u0bb3\u0bcd\\n\\n1. [\u0b95\u0bc1\u0bb1\u0bc1\u0ba8\u0bcd\u0ba4\u0bca\u0b95\u0bc8 - \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1\u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8](https://rampsychiatrist.blogspot.com/2011/03/blog-post_10.html)\\n2. [\u0ba4\u0bae\u0bbf\u0bb4\u0bcd \u0b87\u0ba3\u0bc8\u0baf\u0b95\u0bcd \u0b95\u0bb2\u0bcd\u0bb5\u0bbf\u0b95\u0bcd\u0b95\u0bb4\u0b95\u0bae\u0bcd - \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1\u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8](https://www.tamilvu.org/ta/library-l1220-html-l12206g5-122848)\\n3. [\u0ba4\u0bbf\u0bb0\u0bc1\u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bbe\u0b9f\u0bb1\u0bcd \u0baa\u0bc1\u0bb0\u0bbe\u0ba3\u0bae\u0bcd 52](https://ta.wikisource.org/wiki/%E0%AE%A4%E0%AE%BF%E0%AE%B0%E0%AF%81%E0%AE%B5%E0%AE%BF%E0%AE%B3%E0%AF%88%E0%AE%AF%E0%AE%BE%E0%AE%9F%E0%AE%B1%E0%AF%8D_%E0%AE%AA%E0%AF%81%E0%AE%B0%E0%AE%BE%E0%AE%A3%E0%AE%AE%E0%AF%8D/52)\\n4. [\u0ba4\u0bb0\u0bc1\u0bae\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0ba4\u0bcd \u0ba4\u0ba3\u0bcd\u0ba3\u0bb0\u0bc1\u0bb3\u0bcd --\u0ba4\u0bbf\u0bb0\u0bc1\u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bbe\u0b9f\u0bb2\u0bcd --- \u0bae\u0bb2\u0bb0\u0bc1\u0bae\u0bcd \u0ba4\u0bae\u0bbf\u0bb4\u0bcd](https://eluthu.com/kavithai/287376.html)\\n5. [\u0baa\u0bc6\u0ba3\u0bcd\u0b95\u0bb3\u0bbf\u0ba9\u0bcd \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bcd \u0bae\u0ba3\u0bae\u0bcd \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baf\u0bbe\u0ba9\u0ba4\u0bbe? - UPSC EXAM TAMIL](https://www.gunathamizh.com/2010/01/blog-post_24.html)\\n6. [\u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bcd \u0baa\u0bb0\u0ba4\u0bb0\u0bcd](https://bharathar.blogspot.com/2006/)\\n7. [\u0baa\u0bc7\u0bb0\u0bbe\u0b9a\u0bbf\u0bb0\u0bbf\u0baf\u0bb0\u0bcd \u0ba8\u0bbf\u0ba9\u0bc8\u0bb5\u0bc1\u0b95\u0bb3\u0bcd: \u0ba8\u0baf\u0bae\u0bc6\u0ba9\u0baa\u0bcd \u0baa\u0b9f\u0bc1\u0bb5\u0ba4\u0bc1 \u0baf\u0bbe\u0ba4\u0bc6\u0ba9\u0bbf\u0ba9\u0bcd - \u0bb9\u0bb0\u0bbf \u0b95\u0bbf\u0bb0\u0bc1\u0bb7\u0bcd\u0ba3\u0ba9\u0bcd](http://www.tamilonline.com/thendral/article.aspx?aid=6481)\\n8. [\u0ba4\u0bbf\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bb1\u0bb3\u0bcd : 508](https://www.valaitamil.com/theraan-piranaith-thelindhaan-vazhimurai-theeraa-itumpai-tharum-kural-508.html)\\n\\n## \u0bb5\u0bc6\u0b95\u0bc1\u0bae\u0ba4\u0bbf - Bonus\\n### \u0ba4\u0bbf\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bb1\u0bb3\u0bcd : 508  - \u0b85\u0bb0\u0b9a\u0bbf\u0baf\u0bb2\u0bcd\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'left\'>\\n  \u0ba4\u0bc7\u0bb0\u0bbe\u0ba9\u0bcd \u0baa\u0bbf\u0bb1\u0ba9\u0bc8\u0ba4\u0bcd \u0ba4\u0bc6\u0bb3\u0bbf\u0ba8\u0bcd\u0ba4\u0bbe\u0ba9\u0bcd \u0bb5\u0bb4\u0bbf\u0bae\u0bc1\u0bb1\u0bc8<br></br>\\n  \u0ba4\u0bc0\u0bb0\u0bbe \u0b87\u0b9f\u0bc1\u0bae\u0bcd\u0baa\u0bc8 \u0ba4\u0bb0\u0bc1\u0bae\u0bcd.\\n</Highlight>\\n\\n### \u0b95\u0bb2\u0bc8\u0b9e\u0bb0\u0bcd \u0b89\u0bb0\u0bc8\\n\\n\u0b86\u0bb0\u0bbe\u0baf\u0bcd\u0ba8\u0bcd\u0ba4\u0bc1   \u0baa\u0bbe\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bbe\u0bae\u0bb2\u0bcd    \u0b92\u0bb0\u0bc1\u0bb5\u0bb0\u0bc8\u0ba4\u0bcd  \u0ba4\u0bc1\u0ba3\u0bc8\u0baf\u0bbe\u0b95\u0ba4\u0bcd \u0ba4\u0bc7\u0bb0\u0bcd\u0bb5\u0bc1 \u0b9a\u0bc6\u0baf\u0bcd\u0ba4\u0bc1,\\n\u0b85\u0bae\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bbf\u0b95\u0bcd\u0b95\u0bca\u0ba3\u0bcd\u0b9f\u0bbe\u0bb2\u0bcd \u0b85\u0bb5\u0bb0\u0bbe\u0bb2\u0bcd \u0bb5\u0bb0\u0bc1\u0b99\u0bcd\u0b95\u0bbe\u0bb2\u0ba4\u0bcd \u0ba4\u0bb2\u0bc8\u0bae\u0bc1\u0bb1\u0bc8\u0baf\u0bbf\u0ba9\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0ba8\u0bc0\u0b99\u0bcd\u0b95\u0bbe\u0ba4\\n\u0ba4\u0bc1\u0ba9\u0bcd\u0baa\u0bae\u0bcd \u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bc1\u0bae\u0bcd.\\n\\n### Translation\\n\\nWho trusts an untried stranger, brings disgrace, \\nRemediless, on all his race."},{"id":"browser-engines","metadata":{"permalink":"/wiki/blog/browser-engines","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-17-browser-engines/2024-02-17-browser-engines.md","source":"@site/blog/2024-02-17-browser-engines/2024-02-17-browser-engines.md","title":"Browser Engines - Digest","description":"A JavaScript engine and a render engine are both important components of a web browser. However, they have different functions.","date":"2024-02-17T00:00:00.000Z","tags":[{"label":"browser","permalink":"/wiki/blog/tags/browser"},{"label":"v8","permalink":"/wiki/blog/tags/v-8"}],"readingTime":3.525,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"browser-engines","title":"Browser Engines - Digest","authors":"anand","tags":["browser","v8"]},"unlisted":false,"prevItem":{"title":"Kuruntokai - Verse 02","permalink":"/wiki/blog/kuruntokai-verse-2"},"nextItem":{"title":"How to fix WSL2 & VPN issue","permalink":"/wiki/blog/wsl2-and-cisco-vpn-issue-fix"}},"content":"A JavaScript engine and a render engine are both important components of a web browser. However, they have different functions.\\n\\n### JavaScript Engine\\n\\nA JavaScript engine is responsible for executing JavaScript code. JavaScript is a programming language that is used to add interactivity to web pages. When a web page contains JavaScript code, the browser\'s JavaScript engine is responsible for **parsing and executing JS code**. It **uses JIT compilation** for improved performance.\\n\\n### Render Engine\\n\\nA render(rendering) engine is responsible for displaying the content of a web page on the screen. This includes the HTML, CSS, and JavaScript code. The render engine takes the code and **converts it into a visual representation** that can be displayed on the screen. In browsers, it **works in conjunction with the JavaScript engine via the DOM**(Document Object Model). A rendering engine is also known as a browser engine or layout engine. A browser engine is a core software component of every major web browser.\\n\\n\x3c!--truncate--\x3e\\n\\n| **Browser**          | **Browser Engine** | **JS Engine**         |\\n|----------------------|--------------------|-----------------------|\\n| Google Chrome 28+    | Blink              | V8                    |\\n| Mozilla Firefox      | Gecko              | SpiderMonkey          |\\n| Apple Safari         | WebKit             | JavaScriptCore(Nitro) |\\n| UC Browser (Legacy)  | U3 Engine          | Not known             |\\n| Internet Explorer 11 | Trident            | Chakra                |\\n| MS Edge 18 (Legacy)  | EdgeHTML           | Chakra                |\\n| Opera 14 (Legacy)    | Presto             | Futhark & Carakan     |\\n| Chromium Based       | Blink              | V8                    |\\n\\n\\n* Edge 79+, Opera 15+, Brave, Vivaldi, etc are some example for chromium based browsers.\\n* **Blink** is a **fork** of the WebCore component of **WebKit**, which was originally a fork of the KHTML and KJS libraries from KDE.\\n* **WebRender** is a **component of Gecko**, the browser engine and is a GPU-based **2D rendering engine**.\\n\\n### The Just-in-Time (JIT) paradigm\\n\\nThe most common way of transforming the code is by performing ahead-of-time(**AOT**) compilation. It works exactly as it sounds: the code is transformed into machine code before the execution of your program during the compilation stage. This approach is used by many programming languages such as C++, Java, and others.\\n\\nTo transform the code faster and more effectively for dynamic languages(JS), a new approach was created called Just-in-Time (JIT) compilation. It combines the best from interpretation and compilation. **V8 uses an interpreter** called [**Ignition**](https://github.com/v8/v8/blob/master/src/interpreter/interpreter.h). Initially, it takes an abstract syntax tree and generates byte code.\\n\\n![chicken or egg](./chromium-browser.png)\\n\\n### Sandbox\\n\\nA sandbox is used to **execute JavaScript in a browser**. A sandbox is a security mechanism that isolates code from the rest of the system. This means that JavaScript code running in a sandbox cannot access the user\'s files or other resources on the computer.\\n\\nBrowsers use sandboxes to protect users from malicious JavaScript code. For example, if a website contains malicious JavaScript code, the sandbox will **prevent the code from accessing the user\'s files or other resources**.\\n\\nSandboxes are also used to improve the performance of browsers. By **isolating JavaScript code from the rest of the system**, browsers can execute the code more efficiently.\\n\\nThere are a number of different ways to sandbox JavaScript code in a browser. One common method is to use an iframe. An iframe is a HTML element that creates a sandboxed environment for executing JavaScript code.\\n\\nAnother common method for sandboxing JavaScript code is to use a web worker. A web worker is a JavaScript script that runs in the background, separate from the main thread of the browser. This allows the JavaScript code to run without affecting the performance of the browser.\\n\\n### JavaScript vs. Rendering Engine\\n\\n* JavaScript engine executes code, while the rendering engine is responsible for displaying the web pages.\\n* Each browser uses its own JavaScript and rendering engine.\\n* JavaScript engine runs JavaScript code, while the rendering engine interprets HTML, XML, CSS, etc.\\n\\n### How code is parsed & compiled\\n\\nJavaScript Engines & What They Do\\n\\n![JavaScript Engines](js-engines.png)\\n\\n### Sources\\n1. [JavaScript V8 Engine Explained - hacker noon](https://hackernoon.com/javascript-v8-engine-explained-3f940148d4ef)\\n1. [How JavaScript Works: Under the Hood of the V8 Engine](https://www.freecodecamp.org/news/javascript-under-the-hood-v8/)\\n1. [What are Web Standards and how does Web Browser work?](https://lyamkin.com/blog/what-are-web-standards-and-how-does-web-browser-work/)\\n1. [Browser Engines: The Crux Of Cross Browser Compatibility](https://www.lambdatest.com/blog/browser-engines-the-crux-of-cross-browser-compatibility/)\\n1. [Browser Engine and Types of Browser Engines](https://codinglap.com/browser-engine-and-types-of-browser-engines/)"},{"id":"wsl2-and-cisco-vpn-issue-fix","metadata":{"permalink":"/wiki/blog/wsl2-and-cisco-vpn-issue-fix","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-12-wsl2-vpn-issue-fix.md","source":"@site/blog/2024-02-12-wsl2-vpn-issue-fix.md","title":"How to fix WSL2 & VPN issue","description":"How to fix WSL2 and Cisco Anyconnect VPN internet issue.","date":"2024-02-12T00:00:00.000Z","tags":[{"label":"wsl","permalink":"/wiki/blog/tags/wsl"},{"label":"wsl2","permalink":"/wiki/blog/tags/wsl-2"},{"label":"vpn","permalink":"/wiki/blog/tags/vpn"},{"label":"cisco AnyConnect","permalink":"/wiki/blog/tags/cisco-any-connect"}],"readingTime":7.575,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"wsl2-and-cisco-vpn-issue-fix","title":"How to fix WSL2 & VPN issue","authors":"anand","tags":["wsl","wsl2","vpn","cisco AnyConnect"]},"unlisted":false,"prevItem":{"title":"Browser Engines - Digest","permalink":"/wiki/blog/browser-engines"},"nextItem":{"title":"JS Regex Helper","permalink":"/wiki/blog/js-regex-helper"}},"content":"> How to fix WSL2 and Cisco Anyconnect VPN internet issue.\\n\\nThere is an issue with DNS Forwarding in *WSL2* /*WSL1* when using VPN (see [github Issue](https://github.com/microsoft/WSL/issues/1350)). Plus there is a issue with the *Cisco AnyConnect*. So here is a workaround for these problems. Should work for Ubuntu and Debian.\\n\\n### The problem - some samples\\n\\n* `sudo apt update` will display something similar below:\\n\\n```bash showLineNumbers\\nErr:1 http://archive.ubuntu.com/ubuntu focal-updates InRelease\\n  Temporary failure resolving \'archive.ubuntu.com\'\\nErr:2 http://archive.ubuntu.com/ubuntu focal-backports InRelease\\n  Temporary failure resolving \'archive.ubuntu.com\'\\nReading package lists... Done\\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/focal/InRelease  Temporary failure   resolving \'archive.ubuntu.com\'\\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/focal-updates/InRelease  Temporary   failure resolving \'archive.ubuntu.com\'\\n```\\n\\n* `git pull` will display something similar below:\\n\\n```bash\\n// code-block-error-line\\nfatal: unable to access \'https://github.com/actionanand/wiki.git/\': Could not resolve host: github.com\\n```\\n\\n* `ping google.com` will display something similar below:\\n\\n```bash\\nping: google.com: Temporary failure in name resolution\\n```\\n\x3c!--truncate--\x3e\\n\\nTrying `sudo apt update`, `ping google.com`, `git pull`, etc on `wsl2` will fail when connected to Cisco Anyconnect VPN but without vpn it works fine. The problem is when you are connected to anyconnect(vpn), wsl fails to resolve the DNS.\\n\\n## Workaround (new - automatic)\\nThis solution is automatic and was created by [EdwardCooke](https://www.frakkingsweet.com/automatic-dns-configuration-with-wsl-and-anyconnect-client/). This is just the first part of his solution updating `resolv.conf` when starting WSL.\\n\\n1. Re-enable auto generation of `resolv.conf` (if disabled) by commenting out (#)\\n\\n```bash\\nsudo nano /etc/wsl.conf\\n```\\n\\n```sh\\n#[network]\\n#generateResolvConf = false\\n```\\n\\n2. Create the script\\n\\n```sh\\nsudo nano /bin/vpn-dns.sh\\n```\\n\\n```sh\\n#!/bin/bash\\n\\necho \\"Getting current DNS servers, this takes a couple of seconds\\"\\n\\n/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \'\\n$ErrorActionPreference=\\"SilentlyContinue\\"\\nGet-NetAdapter -InterfaceDescription \\"Cisco AnyConnect*\\" | Get-DnsClientServerAddress | Select -ExpandProperty ServerAddresses\\nGet-NetAdapter | ?{-not ($_.InterfaceDescription -like \\"Cisco AnyConnect*\\") } | Get-DnsClientServerAddress | Select -ExpandProperty ServerAddresses\\n\' | \\\\\\n        awk \'BEGIN { print \\"# Generated by vpn fix func on\\", strftime(\\"%c\\"); print } { print \\"nameserver\\", $1 }\' | \\\\\\n        tr -d \'\\\\r\' > /etc/resolv.conf\\nclear\\n```\\n\\n3. Make it executable/run as sudo\\n\\n```sh\\nsudo chmod +x /bin/vpn-dns.sh\\necho \\"$(whoami) ALL=(ALL) NOPASSWD: /bin/vpn-dns.sh\\" | sudo tee /etc/sudoers.d/010-$(whoami)-vpn-dns\\n```\\n\\n4. Make it run on wsl startup\\n\\n```sh\\necho \\"sudo /bin/vpn-dns.sh\\" | sudo tee /etc/profile.d/vpn-dns.sh\\n```\\nNow restart the wsl & try `wget google.com` or `ping google.com`\\n\\n5. If you don\'t want to auto run (step 4), You can also run it manually (You\'ve to do every time)\\n\\n```sh\\nsudo /bin/vpn-dns.sh\\n```\\n\\n[For more details - StackOverflow](https://superuser.com/questions/1630487/no-internet-connection-ubuntu-wsl-while-vpn)\\n\\n## Workaround (old manual)\\n\\nInternet connection and DNS routing are broken from WSL2 instances, when some VPNs are active. The workaround breaks down into two steps:\\n\\n### DNS Resolution\\n\\n1. Having the Cisco Anyconnect VPN connected, you\'ve to kick start powershell as Admin. Then fire the following commands to get all the available DNS/nameservers. Kindly take these DNS/nameservers down as we need them in later stage.\\n\\n```powershell\\nGet-DnsClientServerAddress -AddressFamily IPv4 | Select-Object -ExpandProperty ServerAddresses\\n```\\n\\n2. Next you can fire the folowing commands to get all the available search domains that will be needed later with the nameservers above.\\n\\n```powershell\\nGet-DnsClientGlobalSetting | Select-Object -ExpandProperty SuffixSearchList\\n```\\n\\n3. When the VPN is active, the autogenerated `/etc/resolv.conf` does not work. So the list of nameservers must be manually built to include some default DNS Name Servers and the DNS from the VPN.\\n\\nFirst, disable automatically generating `/etc/resolv.conf`. And proceed in `wsl2` as described below:\\n\\n```bash\\n  sudo unlink /etc/resolv.conf # this will unlink the default wsl2 resolv.conf\\n```\\n\\n```bash title=\'/etc/resolv.conf\'\\n  # This config will prevent wsl2 from overwritting the resolve.conf file everytime you start wsl2\\n  cat <<EOF | sudo tee -a /etc/wsl.conf\\n  [network]\\n  generateResolvConf = false\\n  EOF\\n```\\n\\nNext, manually add the corportate DNS Server as the first `nameserver` in `/etc/resolv.conf`.\\n\\n```bash title=\'/etc/resolv.conf\'\\ncat <<EOF | sudo tee -a /etc/resolv.conf\\nnameserver 10.50... # The company DNS/nameserver from the command in step 1\\nnameserver 10.50... # The company DNS/nameserver from the command in step 1\\nnameserver 8.8.8.8\\nnameserver 8.8.4.4\\nsearch this.searchdomain.com # The search domain that we got from step 2\\nEOF\\n```\\n\\n4. To prevent the system from re-writing your `/etc/resolv.conf` on startup of wsl, fire the below command in `wsl2`\\n\\n```bash\\nsudo chattr +i /etc/resolv.conf\\n```\\n\\n5. For extra information\\n\\nTo get `<corporateDNS>` addresses, use `ipconfig /all` from `CMD` or `Powershell` prompt, and check the details of the VPN adapter:\\n\\n```powershell\\nDescription . . . . . . . . . . . : Cisco AnyConnect Secure Mobility Client Virtual Miniport Adapter for Windows x64\\nPhysical Address. . . . . . . . . : XX-XX-XX-XX-XX-XX\\nDHCP Enabled. . . . . . . . . . . : No\\nAutoconfiguration Enabled . . . . : Yes\\nIPv6 Address. . . . . . . . . . . : xxxx:xxxx:xxxx:xxxx(Preferred)\\nLink-local IPv6 Address . . . . . : xxxx:xxxx:xxxx:xxxx(Preferred)\\nIPv4 Address. . . . . . . . . . . : 10.20.30.40(Preferred)\\nSubnet Mask . . . . . . . . . . . : 255.255.255.255\\nDefault Gateway . . . . . . . . . : ::\\n                                    0.0.0.0\\nDHCPv6 IAID . . . . . . . . . . . :\\nDHCPv6 Client DUID. . . . . . . . : \\nDNS Servers . . . . . . . . . . . : 123.45.67.89    <- Corporate DNS 1\\n                                    123.45.67.90    <- Corporate DNS 2\\nPrimary WINS Server . . . . . . . : xxx.xx.xxx.xx\\nNetBIOS over Tcpip. . . . . . . . : Enabled\\n```\\n\\n### Network connection\\n\\nWhen the VPN connection is active, network traffic out of WSL2 is not passed to the internet.\\n\\n> Changing the Interface Metric 1 -> 6000 for AnyConnect VPN Adapter will resolve the connection issue. And  this has to be done each time after the VPN connection established.\\n\\nBy default, the Interface Metrics for AnyConnect are:\\n- IPv6: 6000\\n- IPv4: 1\\n\\n`ping` times out from WSL Shell.\\n\\nChanging the Interface Metrics as 600 for AnyConnect will reflect as below:\\n- IPv6: 6000\\n- IPv4: 6000\\n\\n1. To chnage **Interface Metric 1 -> 6000**, fire the below command in powershell\\n\\n```powershell\\nGet-NetAdapter | Where-Object {$_.InterfaceDescription -Match \\"Cisco AnyConnect\\"} | Set-NetIPInterface -InterfaceMetric 6000\\n```\\n:::tip\\nPS: The above command in powershell with admin rights, has to be fired each time after the VPN connection established\\n:::\\n\\n2. Optional: \\n\\nRestart the `wsl2` from powershell using the below command or close the wsl2 window and reopen it.\\n\\n```powershell\\nRestart-Service LxssManager\\n```\\n\\n* [For more ...](https://gist.github.com/machuu/7663aa653828d81efbc2aaad6e3b1431)\\n\\n## Hot Reload not working\\n\\n### Fix for angular running on wsl2\\n\\nThe issue is because of [inotify](https://man7.org/linux/man-pages/man7/inotify.7.html), the Linux API used by hot reload, is not supported in WSL2 on 9P filesystem drives (e.g. Windows drives mounted into WSL2). So you can move your files inside `/home/your_linux_user_name/` directory of wsl(linux). And changing wsl2 to wsl1 will also fix the issue. The below fix is for all javascript projects including react. Here I\'ve mentioned as angular, as I work on that.\\n\\n    1. Open a terminal window.\\n    2. Navigate to the directory of your Angular project.\\n    3. Set the `CHOKIDAR_USEPOLLING` environment variable to `true` in env file. This will force Chokidar to use **polling** instead of watching for file changes.\\n    4. Start the Angular development server.\\n\\nYou can also achieve the same by firing the following command in wsl2 terminal inside the desired angular project as below:\\n\\n```bash\\nexport CHOKIDAR_USEPOLLING=true\\nng serve\\n```\\n\\n`CHOKIDAR_USEPOLLING` is an environment variable that is used to enable a polling mechanism for file watching. This is useful in situations where the default file watching mechanism does not work properly, such as when using Docker or WSL.\\n\\nOnce you have set `CHOKIDAR_USEPOLLING` to `true`, your Angular app will use a polling mechanism to watch for file changes. This means that it will periodically check for changes to your files, rather than relying on the operating system to notify it of changes.\\n\\nUsing CHOKIDAR_USEPOLLING can help to improve the reliability of hot reloading in Angular apps. However, it can also have a negative impact on performance, so it is only recommended to use it if you are experiencing problems with hot reloading. And **CHOKIDAR_USEPOLLING** is only supported in **Node.js versions 10 and above**.\\n\\n## Bonus\\n\\n### Not able to download RAW files too?\\n\\n```bash\\nwget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\\n--2022-12-28 13:02:52-- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\\nResolving raw.githubusercontent.com (raw.githubusercontent.com)\u2026 49.44.79.236, 2405:200:1607:2820:41::36\\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|49.44.79.236|:443\u2026 failed: Connection timed out.\\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|2405:200:1607:2820:41::36|:443\u2026 failed: Network is unreachable.\\n```\\n\\nIf you are in India and using the Jio network, you may face this as well because the ISP blocks the `raw.githubusercontent.com` at the DNS level for some unknown reason!\\n\\n\\n* Updating the `/etc/hosts` file in Linux & Windows or changing DNS or connecting to vpn will resolve the issue. Here we can see about updating `hosts` file.\\n\\n1. For windows, Open `notepad` with admin, then click `file -> open` (`ctr+o`) and navigate to path **%SystemRoot%\\\\System32\\\\drivers\\\\etc\\\\hosts**\\n\\n```bash\\nC:\\\\System32\\\\drivers\\\\etc\\\\hosts\\n```\\n\\nThen, at the end of this file, add the IP address and the domain name as below:\\n\\n```bash\\n185.199.110.133 raw.githubusercontent.com\\n```\\n\\nOpen the `/etc/hosts` file via nano or any editor in linux and mac and add the above code.\\n\\n```bash\\nsudo nano /etc/hosts\\n```"},{"id":"js-regex-helper","metadata":{"permalink":"/wiki/blog/js-regex-helper","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-09-js-regex-helper.mdx","source":"@site/blog/2024-02-09-js-regex-helper.mdx","title":"JS Regex Helper","description":"Regex - short Regular Expression","date":"2024-02-09T00:00:00.000Z","tags":[{"label":"regex","permalink":"/wiki/blog/tags/regex"}],"readingTime":9.06,"hasTruncateMarker":true,"authors":[{"name":"Anand Techie","title":"Software Developer, Frontend","url":"https://github.com/AnandRaja-tech","imageURL":"https://github.com/AnandRaja-tech.png","key":"anand-tech"}],"frontMatter":{"slug":"js-regex-helper","title":"JS Regex Helper","authors":"anand-tech","description":"Regex - short Regular Expression","tags":["regex"]},"unlisted":false,"prevItem":{"title":"How to fix WSL2 & VPN issue","permalink":"/wiki/blog/wsl2-and-cisco-vpn-issue-fix"},"nextItem":{"title":"Which came first?","permalink":"/wiki/blog/the-chicken-or-the-egg"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\n\\nA <Highlight color=\'#25c2a0\'> regular expression </Highlight>, also known as <Highlight color=\'#1877F2\'> regex </Highlight> or <Highlight color=\'#1877F2\'> regexp </Highlight>, is a sequence of characters that define a search pattern. It can be used to search, edit, or manipulate text and data.\\n\\nIn JavaScript, regular expressions are created using the <Highlight color=\'#ff1b68\'> RegExp object </Highlight>. The RegExp object has a number of methods that can be used to search for and manipulate strings.\\n\\nHere are some examples of regular expressions in JavaScript:\\n\\n```js showLineNumbers\\n// Find all occurrences of the letter \\"a\\" in a string\\nconst regex = /a/g;\\nconst string = \\"This is a string.\\";\\nconst matches = regex.exec(string);\\n\\n// Replace all occurrences of the letter \\"a\\" with the letter \\"e\\" in a string\\nconst regex = /a/g;\\nconst string = \\"This is a string.\\";\\nconst newString = string.replace(regex, \\"e\\");\\n\\n// Check if a string contains a particular pattern\\nconst regex = /^abc/g;\\nconst string = \\"abc123\\";\\nconst match = regex.test(string);\\n```\\n\\n\x3c!--truncate--\x3e\\n\\n\\n> <Highlight color=\'#25c2a0\'> Regex </Highlight> short Regular Expression\\n\\n### 1. General view\\n\\n  - Expressions need to be surrounded by forward slashes - Eg. `/expression/`\\n\\n### 2. Modes or Flags in regex\\n\\n  - Standard - `/expression/`\\n  - Case-insensitive - `/expression/i`\\n\\n    - With this flag the search is case-insensitive: no difference between **A** and **a**\\n\\n  - Dot-matches-all - `/expression/s`\\n\\n    - Enables **dotall** mode, that allows a dot `.` to match newline character `\\\\n`\\n\\n    - By default, a dot doesn\u2019t match the newline character `\\\\n`.\\n\\n    - For instance, the regexp `A.B` matches A, and then B with any character between them, except a newline `\\\\n`\\n\\n    ```js\\n    alert(\'A\\\\nB\'.match(/A.B/)); // null (no match)\\n    ```\\n\\n    - There are many situations when we\u2019d like a dot to mean literally **any character**, newline included.\\n\\n    - That\u2019s what flag `s` does. If a regexp has it, then a dot `.` matches literally any character:\\n\\n    ```js\\n    alert(\'A\\\\nB\'.match(/A.B/s)); // A\\\\nB (match!)\\n    ```\\n\\n  - Multiline - `/expression/m`\\n  - Global - `/expression/g`\\n    - With this flag the search looks for all matches, without it \u2013 only the first match is returned\\n\\n### 3. Metacharacters\\n\\n* They\'re characters with special meaning the most common metacharacters we use in expressions are `. + - * $ {} () [] ! : = ^ | `\\n\\n  - Escaping Metacharacters:\\n\\n    - Sometmes we need to escape our symbols if they look the same as the text we want to find,\\n    - for example, As you can see here `/4.500/ ` these match will cause issues if we need to find `4.500` since the dot its the wildecard but what we need is the literal dot, we need to do something like the below.\\n\\n    - `/4\\\\.500/` we use a back slash here to escape the wildcard making it a literal character now, meaning its just a dot.\\n\\n### 4. Range sets\\n\\n  - `[A-Z]` matches any uppercase character from A to Z\\n\\n  - `[a-z]` matches any lowercase character from A to Z\\n\\n  - `[0-9]` matches any digit character from 0 to 9\\n\\n  - `[A-Za-z0-9]` we can also combine them\\n  - `/au[acdt]o/` matches `auto` - third character should be either one from the set `[acdt]`\\n\\n### 5. Negative sets\\n\\n  - `[^abc]` match anything except `abc` or what is after the caret inside the brackets. We are still matching one character here, not group of all character.\\n\\n### 6. Shorthand for sets\\n\\n  | **Code** | **Description**                                             | **Equivalent** |\\n  | :------: | :---------------------------------------------------------- | :------------- |\\n  |    \\\\d    | Digit                                                       | [0-9]          |\\n  |    \\\\D    | Non digit                                                   | [^0-9]         |\\n  |    \\\\s    | Any tab carriage return or new line                         | [ \\\\t\\\\r\\\\n]      |\\n  |    \\\\S    | No whitespace of any kind                                   | [^ \\\\t\\\\r\\\\n]     |\\n  |    \\\\w    | Word characters including underscore & digits, NO Hyphen(-) | [_A-Za-z0-9]   |\\n  |    \\\\W    | No word characters                                          | [ ^_A-Za-z0-9] |\\n\\n  - `/\\\\w\\\\w\\\\w/` matches 123, abc, and \\\\_1Z (i.e, 3 word characters)\\n\\n  - `/\\\\d\\\\d\\\\d/` matches 123 bot not car (i.e, 3 digits)\\n\\n### 7. Repetition Metacharacters\\n\\n  | Quantifier | Description                                                              |\\n  | :--------: | :----------------------------------------------------------------------- |\\n  |     `\\\\*`   | Matches the previous element zero or more times.                         |\\n  |     `+`    | Matches the previous element one or more times.                          |\\n  |     `?`    | Matches the previous element zero or one time.                           |\\n  |    `{n}`   | Matches the previous element exactly n times.                            |\\n  |    `{n,}`  | Matches the previous element at least n times.                           |\\n  |   `{n,m}`  | Matches the previous element at least n times, but no more than m times. |\\n\\n  - `/cars*/` - matches car, cars and carsssssssssss and many more\\n  - `/\\\\d\\\\d\\\\d*/` - matches two digits or more (remember this is starts from zero to more)\\n  - `/cars+/` - does not match car since it needs to be more more than 1 character ,E.G, cars or carsssssssssss\\n  - `/\\\\d\\\\d\\\\d+/` - matches three digits or more (remember this is starts from 1 to more)\\n  - `/cars?/` - the (s) its optional meaning it matches car and cars not carssssssss\\n\\n    - `/\\\\d{1}/` - matches 1 single digits\\n    - `/\\\\d{1,}/` - matches 1 or more digits\\n    - `/\\\\d{1,2}/` - matches 1 to 2 digits\\n\\n### 8. Greedy Expression vs Lazy\\n\\n  - Greedy `\\\\w+\\\\d+\\\\w+` it maches `file1_export` from `file1_export.sql` since it tries to math as much as possible\\n  - Lazy `\\\\w+\\\\d+\\\\w+?` , this matches `file1_` from `file1_export.sql` why is gives up when it find the first word character at the end. (Notice we have a question mark at the end of the w \\"?\\" )\\n  - You can use the lazy format in these quantifiers `_, +. {} ?`, you would have something likes this `_?, +?, {}?, ??`\\n\\n### 9. Grouping & Alternation\\n\\n  - Grouping:\\n\\n    - `/(cde)+/` matches `cde` and `cdecdecdecde`\\n    - `/(super)?market/` matches `market` and `supermarket`\\n    - `(super)market` matches `supermarket`\\n\\n  - Alternation\\n\\n    - `super|market` matches `super` or `market`\\n    - `super(market|bowl)` matches `supermarket` or `superbowl`\\n    - `\\\\(12|ab|#%){8}\\\\` this matches `12ab#%12ab#%12ab`\\n      The code above might seen confusing but was happening is that the sets of characters are repeating until they reach eight times in sets of two. Notice we are wrapping the symbols in parenthesis, basically groping then and then applying the quantifier.\\n\\n### 10. Anchors\\n\\n    | Metacharacter | Description                                                                                  |\\n    | :-----------: | :------------------------------------------------------------------------------------------- |\\n    |       ^       | The match must start at the beginning of the string or line.                                 |\\n    |       $       | The match must occur at the end of the string or before \\\\n at the end of the line or string. |\\n    |      \\\\A       | The match must occur at the start of the string.                                             |\\n    |      \\\\Z       | The match must occur at the end of the string or before \\\\n at the end of the string          |\\n\\n    - `\\\\A` and `\\\\Z` are supported by PHP, Python, Perl, Java and .NET . Maybe other engines will start supporting it the future.\\n\\n    - the` ^` and `$` support `multiline mode`, meaning they can match not just then end of string but the end of lines. With `\\\\A` and `\\\\Z` you cannot do that.\\n      - `/^\\\\./ ` this matches the first dot on `.car.`\\n      - `/\\\\.$/` this matches the last dot on `.car. `\\n\\n### 11. Boundaries\\n\\n    - `\\\\b\\\\w+\\\\b` matches `my car is black`, this will be default behavior without `\\\\b` in this case, so every beginning and end of the word is matched.\\n\\n    - `\\\\B\\\\w+\\\\B` matches `a` from `car` and `lack` from `black`, so letters that are NOT the beginning or end of words are matched here.\\n\\n### 12. Backreferences \\nGrouped expressions that are capture for later usage\\n\\n    - `/super(market)/` matches `supermarket` and stores `market`. So if we wanted to use this store value we would use numbers from 1-9 for example `\\\\1`.\\n\\n      - `super(market) \\\\1` matches `supermarket market` -> `\\\\1` means `market` here.\\n      - `super(market) \\\\1 super(bowl) \\\\2` matches `supermarket market superbowl bowl`\\n      - As you can see we are using the numbers from left to right in order to use the data stored int the parenthesis.\\n      - since capturing happens by default it will eat up the spaces 1-9 that we have, and can slow down our app, to turn this off we just use question mark followed by a colon in the parenthesis like so.. `super(?:market) `\\n\\n      ```js showLineNumbers\\n      let phrase = \'Anand Raja\';\\n      let pattern = /(\\\\w+)\\\\s(\\\\w+)/;\\n\\n      let newPhrase = phrase.replace(pattern, \'$1\');\\n      console.log(\'First: \' + newPhrase);\\n      // Output will be first parenthesis\'s data\\n      // First: Anand\\n\\n      newPhrase = phrase.replace(pattern, \'$2\');\\n      console.log(\'Second: \' + newPhrase);\\n      // Output will be second parenthesis\'s data\\n      // Second: Raja\\n\\n      pattern = /(?:\\\\w+)\\\\s(\\\\w+)/;\\n      newPhrase = phrase.replace(pattern, \'$1\');\\n      console.log(\'Third: \' + newPhrase);\\n      // Output will be second parenthesis\'s data as we\'re turning off capturing for first parenthesis\\n      // Third: Raja\\n\\n      pattern = /(\\\\w+)\\\\s(\\\\w+)\\\\s\\\\1/;\\n      phrase = `love is love`; // \\\\1 denotes love\\n      newPhrase = phrase.replace(pattern, \'$1\');\\n      console.log(\'Fourth: \' + newPhrase);\\n      // Output will be first parenthesis\'s data\\n      // Fourth: love\\n      ```\\n\\n### 13. Positive & Negative Lookaheads\\n\\n    - `super(?=market)` if `super` is preceded by `market`, match it, this will match `super`\\n      - if `supermarket superbowl` is phrase to be checked, `super` from `supermarket` will only be matched. -> meaning market should be preceded by super(i.e, super with market)\\n    - To do the apposite we do this, `super(?!market)`\\n      - if `supermarket superbowl` is phrase to be checked, `super` from `superbowl` will only be matched. -> meaning market should not be there after super(i.e, super without market)\\n\\n### 14. Positive & Negative Lookbehind\\n\\n    - `(?<=super)market` matches `market` in `supermarket`\\n    - `(?<!market)super` matches `super` in `supermarket`\\n    - Lookbehind is not supported in non-V8 browsers, such as Safari, Internet Explorer\\n\\n    - The syntaxes are:\\n\\n      - Positive lookbehind: `(?<=Y)X`, matches `X`, but only if there\u2019s `Y` before it.\\n      - Negative lookbehind: `(?<!Y)X`, matches `X`, but only if there\u2019s no `Y` before it.\\n\\n### 15. Examples\\n\\n    - Postal code to choose either 4 or 5 digits in the begining, or along with that dash and another 4 digits at the end (say `34216-6501`)\\n\\n    ```regex\\n      /^\\\\d{4,5}(-\\\\d{4})?$/\\n    ```\\n\\n    - Password with altest one uppercase, lowercase, and one special character from the list (!,@,$,#,-,^,%,&,\\\\*) with min. 8 and max. 13 characters\\n\\n    ```regex\\n      /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\\\d)(?=.*[!@$#\\\\-\\\\^%&*])\\\\S{8,13}$/\\n    ```\\n\\n    - The below regex will match `27-11-1996` or `05/10/2023` or `7-1-1954` or `7-03-1954`. One disadvantage is year can be any 4 digits.\\n\\n    ```regex\\n      /^(0?[1-9]|[1-2][0-9]|3[0-1])[/-](0?[1-9]|1[0-2])[/-]\\\\d{4}$/\\n    ```\\n\\n    - Select all html tags except [a, ul, li, ol]\\n\\n    ```regex\\n      /<(?!\\\\/?(a|ul|li|ol)(?=>|\\\\s?.*>))\\\\/?.*?>/g\\n    ```\\n\\n    - Select all anchor tags(a tag) in html\\n\\n    ```regex\\n      /<a.*?>|<\\\\/a>/g\\n    ```\\n\\n    - How to select all html tags\\n\\n    ```regex\\n      /<[^>]*>/g\\n    ```\\n\\n### Usefull online Regex validator\\n\\n1. [Regex101](https://regex101.com/)\\n2. [Regex Pal](https://www.regexpal.com/)\\n3. [Regex Pal github source code](https://github.com/rpayanm/regexpal)\\n4. [I hate Regex source code - Vue](https://github.com/geongeorge/i-hate-regex)\\n\\n### Resources\\n\\n1. [Regex to validate date formats dd/mm/YYYY, dd-mm-YYYY, dd.mm.YYYY, dd mmm YYYY, dd-mmm-YYYY, dd/mmm/YYYY, dd.mmm.YYYY with Leap Year Support](https://stackoverflow.com/questions/15491894/regex-to-validate-date-formats-dd-mm-yyyy-dd-mm-yyyy-dd-mm-yyyy-dd-mmm-yyyy)\\n2. [Javascript info - regex](https://javascript.info/regexp-introduction)\\n3. [Learn Regex - github](https://github.com/ziishaned/learn-regex)\\n4. [How to Use Regular Expressions in JavaScript \u2013 Tutorial for Beginners](https://www.freecodecamp.org/news/regular-expressions-for-beginners/)\\n5. [JavaScript Regex - Programiz](https://www.programiz.com/javascript/regex)\\n6. [A Guide to Regular Expressions (Regex) in JavaScript](https://builtin.com/software-engineering-perspectives/javascript-regex)"},{"id":"the-chicken-or-the-egg","metadata":{"permalink":"/wiki/blog/the-chicken-or-the-egg","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-09-chicken-or-egg/index.mdx","source":"@site/blog/2024-02-09-chicken-or-egg/index.mdx","title":"Which came first?","description":"You\'ve heard the age-old riddle the chicken or the egg?\\" Taken metaphorically, it\'s a meditation on the futility of determining the cause of a self-perpetuating cycle. Taken literally, it\'s a great question for evolutionary biologists.","date":"2024-02-09T00:00:00.000Z","tags":[{"label":"js","permalink":"/wiki/blog/tags/js"},{"label":"riddle","permalink":"/wiki/blog/tags/riddle"},{"label":"puzzle","permalink":"/wiki/blog/tags/puzzle"}],"readingTime":0.735,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Senior Software Engineer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"},{"name":"Anand Techie","title":"Software Developer, Frontend","url":"https://github.com/AnandRaja-tech","imageURL":"https://github.com/AnandRaja-tech.png","key":"anand-tech"}],"frontMatter":{"slug":"the-chicken-or-the-egg","title":"Which came first?","authors":["anand","anand-tech"],"tags":["js","riddle","puzzle"]},"unlisted":false,"prevItem":{"title":"JS Regex Helper","permalink":"/wiki/blog/js-regex-helper"},"nextItem":{"title":"Centering a Text Inside a Button","permalink":"/wiki/blog/text-align-center-in-button"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\nYou\'ve heard the age-old riddle: \\"Which came first: the chicken or the egg?\\" Taken metaphorically, it\'s a meditation on the futility of determining the cause of a self-perpetuating cycle. Taken literally, it\'s a great question for evolutionary biologists.\\n\\nChickens come from eggs, but eggs come from chickens. So which came first?\\n\\n\x3c!--truncate--\x3e\\n\\n:::tip\\nWhich came first, *the chicken* or *the egg*?\\n\\n<Tabs>\\n  <TabItem value=\\"js\\" label=\\"JS\\">\\n  ```js\\n  const question = [\'\ud83e\udd5a\',\'\ud83d\udc14\'];\\n  const answer = question.sort();\\n  console.log(answer[0] + \' was first!\');\\n  ```\\n  </TabItem>\\n  <TabItem value=\\"react\\" label=\\"React\\">\\n  ```jsx\\n  <button onClick={\\n    () => {\\n      const question = [\'\ud83e\udd5a\',\'\ud83d\udc14\'];\\n      const answer = question.sort();\\n      return alert(answer[0] + \' was first!\');\\n    } \\n  }>Click me!</button>\\n  ```\\n  </TabItem>\\n</Tabs>\\n\\n<button onClick={\\n  () => {\\n    const question = [\'\ud83e\udd5a\',\'\ud83d\udc14\'];\\n    const answer = question.sort();\\n    return alert(answer[0] + \' was first!\');\\n  } \\n}>Click me!</button>\\n\\n:::\\n\\n\x3c!-- https://images.newscientist.com/wp-content/uploads/2021/05/21153947/what-came-first-the-chicken-or-the-egg-gettyimages-a0048-000156_chickenegg_web.jpg --\x3e\\n![chicken or egg](./chicken-egg.jpg)"},{"id":"text-align-center-in-button","metadata":{"permalink":"/wiki/blog/text-align-center-in-button","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-08-text-align-center.md","source":"@site/blog/2024-02-08-text-align-center.md","title":"Centering a Text Inside a Button","description":"Instead of centering headings and paragraphs, let\u2019s center text inside another element ( ). Aligning the button, and the text inside the button, would differ slightly from the examples.","date":"2024-02-08T00:00:00.000Z","tags":[{"label":"css","permalink":"/wiki/blog/tags/css"},{"label":"center-css","permalink":"/wiki/blog/tags/center-css"}],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","image_url":"https://github.com/actionanand.png","imageURL":"https://github.com/actionanand.png"},{"name":"Anand Techie","title":"Software Developer, JS Specialist"}],"frontMatter":{"slug":"text-align-center-in-button","title":"Centering a Text Inside a Button","authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","image_url":"https://github.com/actionanand.png","imageURL":"https://github.com/actionanand.png"},{"name":"Anand Techie","title":"Software Developer, JS Specialist"}],"tags":["css","center-css"]},"unlisted":false,"prevItem":{"title":"Which came first?","permalink":"/wiki/blog/the-chicken-or-the-egg"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\nInstead of centering headings and paragraphs, let\u2019s center text inside another element (`<button> </button>`). Aligning the button, and the text inside the button, would differ slightly from the examples.\\n\\nThat\u2019s because the text-align property only works on the content inside block-level elements, such as headings and paragraphs, and not inline elements, such as buttons.\\n\\nSo here\'s what we\'ll do instead:\\n\\n* Wrap the button in a `div`\\n* Then, add an inline style declaration to the div, i.e. `<div style=\\"text-align:center\\">`.\\n\\n\\n<Tabs>\\n  <TabItem value=\\"html\\" label=\\"HTML\\">\\n    ```html\\n    <div style=\\"text-align:center\\">\\n      <button type=\\"button\\" class=\\"btn btn-primary\\">Click Me</button>\\n    </div>\\n    ```\\n  </TabItem>\\n  <TabItem value=\\"css\\" label=\\"CSS\\">\\n    ```css\\n    .btn{\\n      background-color: #0068B1; \\n      font-family: \'Lexend Deca\', sans-serif;\\n      text-transform: uppercase;\\n      color: white;\\n      padding: 20px; \\n      width: 200px;\\n      border-radius: 10px;\\n    }\\n\\n    .btn:hover{\\n      background-color: #408EC5;\\n    }\\n    ```\\n  </TabItem>\\n</Tabs>"}]}')}}]);