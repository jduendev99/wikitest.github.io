"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[8937],{97312:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>h,contentTitle:()=>c,default:()=>g,frontMatter:()=>a,metadata:()=>d,toc:()=>u});var s=i(17624),t=i(4552),o=i(61268),r=i(87768),l=i(94384);const a={sidebar_position:5,sidebar_label:"My Tips - 1"},c="My Tips - 1",d={id:"js-tips/my-tips-1",title:"My Tips - 1",description:"Logical operators",source:"@site/docs/js-tips/my-tips-1.md",sourceDirName:"js-tips",slug:"/js-tips/my-tips-1",permalink:"/wiki/docs/js-tips/my-tips-1",draft:!1,unlisted:!1,editUrl:"https://github.com/actionanand/wiki/docs/js-tips/my-tips-1.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"My Tips - 1"},sidebar:"tutorialSidebar",previous:{title:"JS reduce() in depth",permalink:"/wiki/docs/js-tips/js-reduce"},next:{title:"for-in vs for-of",permalink:"/wiki/docs/js-tips/for-in-vs-for-of"}},h={},u=[{value:"Logical operators",id:"logical-operators",level:2},{value:"Logical operators - Simplified",id:"logical-operators---simplified",level:3},{value:"Truthy and Falsy Values",id:"truthy-and-falsy-values",level:3},{value:"Arrow Functions vs Regular Functions",id:"arrow-functions-vs-regular-functions",level:2},{value:"Arrow Functions",id:"arrow-functions",level:3},{value:"Regular Functions",id:"regular-functions",level:3},{value:"<code>this</code> Keyword",id:"this-keyword",level:3},{value:"Arguments Object",id:"arguments-object",level:3},{value:"avoiding <code>const self = this</code> using Arrow function",id:"avoiding-const-self--this-using-arrow-function",level:3},{value:"Understanding Call, Bind and Apply",id:"understanding-call-bind-and-apply",level:3},{value:"Resources",id:"resources",level:3}];function m(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.M)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"my-tips---1",children:"My Tips - 1"}),"\n",(0,s.jsx)(e.h2,{id:"logical-operators",children:"Logical operators"}),"\n",(0,s.jsxs)(e.p,{children:["All values in Javascript are either ",(0,s.jsx)(e.code,{children:"truthy"})," or ",(0,s.jsx)(e.code,{children:"falsy"}),"."]}),"\n",(0,s.jsx)(e.h3,{id:"logical-operators---simplified",children:"Logical operators - Simplified"}),"\n",(0,s.jsxs)(e.admonition,{type:"tip",children:[(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"a && b"})," evaluates to the ",(0,s.jsx)(e.strong,{children:"first falsy"})," operand",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(e.code,{children:"a || b"})," evaluates to the ",(0,s.jsx)(e.strong,{children:"first truthy"})," operand",(0,s.jsx)("br",{})]}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"console.log(1&&2&&3&&13) // will result 13 (last value)\nconsole.log(1||2||3||13) // will result 1(first value)\n"})})]}),"\n",(0,s.jsx)(e.h3,{id:"truthy-and-falsy-values",children:"Truthy and Falsy Values"}),"\n",(0,s.jsxs)(e.p,{children:["The following ",(0,s.jsx)(e.strong,{children:"6 values"})," are considered ",(0,s.jsx)(e.strong,{children:"falsy"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"false"})," - boolean"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"0"}),", ",(0,s.jsx)(e.code,{children:"-0"})," & ",(0,s.jsx)(e.code,{children:"0n"})," - number 0, number -0 & bigint 0"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"''"}),", ",(0,s.jsx)(e.code,{children:'""'})," & `` - empty string"]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"null"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"undefined"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"NaN"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"All other values are considered truthy!"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"[]"}),", ",(0,s.jsx)(e.code,{children:"{}"})," & ",(0,s.jsx)(e.code,{children:"' '"})," (white space string) are also considered to be truthy."]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",metastring:"showLineNumbers",children:"Boolean(false) // false\n!!false // false\nBoolean('false') // true\n!!0 // false\nBoolean('0') // true\nBoolean('') // false\nBoolean(' ') // true\n!![] // true\nBoolean({}) // true\n!!NaN // false\nBoolean(null) // false\n"})}),"\n",(0,s.jsx)(e.h2,{id:"arrow-functions-vs-regular-functions",children:"Arrow Functions vs Regular Functions"}),"\n",(0,s.jsx)(e.h3,{id:"arrow-functions",children:"Arrow Functions"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Introduced in ",(0,s.jsx)(e.code,{children:"ES6"})," (ECMAScript 2015) as a more concise way to define functions."]}),"\n",(0,s.jsxs)(e.li,{children:["Syntax: ",(0,s.jsx)(e.code,{children:"(parameters) => expression"})," or ",(0,s.jsx)(e.code,{children:"(parameters) => { statements }"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:["Do not have their own this, ",(0,s.jsx)(e.code,{children:"arguments"}),", ",(0,s.jsx)(e.code,{children:"super"}),", or ",(0,s.jsx)(e.code,{children:"new.target"})," bindings. Instead, they inherit these from the enclosing scope."]}),"\n",(0,s.jsxs)(e.li,{children:["Cannot be used as constructors (i.e., you cannot use ",(0,s.jsx)(e.code,{children:"new"})," with arrow functions)."]}),"\n",(0,s.jsxs)(e.li,{children:["Automatically return the result of the expression if there are no curly braces "," around the function body."]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"regular-functions",children:"Regular Functions"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Syntax: ",(0,s.jsx)(e.code,{children:"function functionName(parameters) { statements }"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:["Have their own ",(0,s.jsx)(e.code,{children:"this"}),", ",(0,s.jsx)(e.code,{children:"arguments"}),", ",(0,s.jsx)(e.code,{children:"super"}),", and ",(0,s.jsx)(e.code,{children:"new.target"})," bindings."]}),"\n",(0,s.jsxs)(e.li,{children:["Can be used as constructors with the ",(0,s.jsx)(e.code,{children:"new"})," keyword to create instances."]}),"\n"]}),"\n",(0,s.jsxs)(e.h3,{id:"this-keyword",children:[(0,s.jsx)(e.code,{children:"this"})," Keyword"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["In regular function, ",(0,s.jsx)(e.code,{children:"this"})," changes according to the way that function is invoked.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Simple Invocation"}),": this equals the global object(",(0,s.jsx)(e.code,{children:"window"}),") or maybe ",(0,s.jsx)(e.code,{children:"undefined"})," if you are using strict mode."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Method Invocation"}),": this equals the object that owns the method.."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Constructor Invocation"}),": this equals the newly created instance."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"/* ******Simple Invocation****** */\nfunction simpleInvocation() {\n  console.log(this);\n}\n\nsimpleInvocation(); // logs global object\n// Window\xa0{window: Window, self: Window, document: document, name: '', location: Location,\xa0\u2026}\n\n/* ******Method Invocation****** */\nconst methodInvocation= {\n  method() {\n    console.log(this);\n  }\n};\n\nmethodInvocation.method(); // logs methodInvocation object\n// {method: \u0192}\n\n/* ******Constructor Invocation****** */\nfunction constructorInvocation() {\n  console.log(this);\n}\n\nnew constructorInvocation(); // logs an instance of\n// constructorInvocation\xa0{}\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Arrow functions don't have their own ",(0,s.jsx)(e.code,{children:"this"}),", and they don\u2019t redefine the value of ",(0,s.jsx)(e.code,{children:"this"})," within the function."]}),"\n"]}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:["Regardless of how you execute arrow functions, ",(0,s.jsx)(e.code,{children:"this"})," inside an arrow function always refers to ",(0,s.jsx)(e.code,{children:"this"})," ",(0,s.jsx)(e.strong,{children:"from the outer context"}),". This means that ",(0,s.jsx)(e.code,{children:"this"})," keyword is ",(0,s.jsx)(e.strong,{children:"lexically bound"})," in arrow functions."]})}),"\n",(0,s.jsxs)(o.c,{children:[(0,s.jsx)(r.c,{value:"arrow1",label:"Sample 1",default:!0,children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// highlight-next-line\nvar variable = 'Global Level Variable';\n\nlet myObject = { \n  // highlight-next-line\n  variable: 'Object Level Variable',\n\n  arrowFunction: () => { \n    console.log(this.variable); \n  },\n\n  regularFunction(){ \n  console.log(this.variable); \n  } \n};\n\nmyObject.arrowFunction(); \nmyObject.regularFunction();\n\n// Output\nGlobal Level Variable\nObject Level Variable\n"})})}),(0,s.jsx)(r.c,{value:"arrow2",label:"Sample 2",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:'const myObject = {\n  regularExample: function() {\n    console.log("REGULAR: ", this);\n  },\n    \n  arrowExample: () => {\n    console.log("ARROW: ", this);\n  }\n}\n    \nmyObject.regularExample();\nmyObject.arrowExample();\n\n// Output\n// {regularExample: \u0192, arrowExample: \u0192}\n// ARROW:  Window\xa0{window: Window, self: Window, document: document, name: \'JS Bin Output \', location: Location,\xa0\u2026}\n// in strict mode, for arrow function, the following will be the output\n// ARROW:  undefined\n'})})}),(0,s.jsx)(r.c,{value:"arrow3",label:"Sample 3",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const obj = {\n  name: 'deeecode',\n  age: 200,\n\n  // highlight-start\n  print: function() {\n    console.log(this);\n\n    function print2() {\n      console.log(this);\n    }\n    \n    print2();\n  },\n  // highlight-end\n\n  log: () => {\n    console.log(this);\n  }\n}\n\nobj.print();\n// {name: 'deeecode', age: 200, print: \u0192}\n// Window\xa0{window: Window, self: Window, document: document, name: '', location: Location,\xa0\u2026}\n\n// In this case, print is called by `obj` (`obj.print()`) but no object calls `print2` (`print2()`). \n// So the `this` in `print2` would reference the `window` object by default.\n\nobj.log();\n// Window\xa0{window: Window, self: Window, document: document, name: '', location: Location,\xa0\u2026}\n"})})}),(0,s.jsx)(r.c,{value:"arrow4",label:"Sample 4",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"class Animal {\n  constructor(name, numOfLegs) {\n    this.name = name;\n    this.numOfLegs = numOfLegs;\n  }\n  \n  sayName() {\n    console.log(`My name is ${this.name}`);\n  }\n  \n  sayAboutMyLegs = () => {\n    console.log(`I've ${this.numOfLegs} leg(s)`);\n  }\n}\n\n\nconst Dog = new Animal('Bingo', 4);\n\nDog.sayName(); // My name is Bingo\nDog.sayAboutMyLegs(); // I've 4 leg(s)\n"})})}),(0,s.jsx)(r.c,{value:"arrow5",label:"Error",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"class Animal {\n  constructor = (name, numOfLegs) => {\n    this.name = name;\n    this.numOfLegs = numOfLegs;\n  }\n  \n  sayName() {\n    console.log(`My name is ${this.name}`);\n  }\n}\n\n// Uncaught SyntaxError: Classes may not have a field named 'constructor'\n"})})})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const obj = {\n  name: 'deeecode',\n  age: 200,\n  // highlight-start\n  print: function() {\n    const print2 = () => {\n      console.log(this);\n    }\n    \n    print2();\n  }\n  // highlight-end\n}\n\nobj.print();\n// {name: 'deeecode', age: 200, print: \u0192}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Here, we have ",(0,s.jsx)(e.code,{children:"print"})," as a normal function which means a ",(0,s.jsx)(e.code,{children:"this"})," variable is automatically created in it. Then we have ",(0,s.jsx)(e.code,{children:"print2"})," which is an arrow function."]}),"\n",(0,s.jsxs)(e.p,{children:["Since ",(0,s.jsx)(e.code,{children:"print2"})," is an arrow function, it doesn't create its own ",(0,s.jsx)(e.code,{children:"this"})," variable. Therefore, any reference to ",(0,s.jsx)(e.code,{children:"this"})," would point to what the value of ",(0,s.jsx)(e.code,{children:"this"})," was before the function was created. In this case where ",(0,s.jsx)(e.code,{children:"obj"})," calls ",(0,s.jsx)(e.code,{children:"print"}),", ",(0,s.jsx)(e.code,{children:"this"})," was pointing to ",(0,s.jsx)(e.code,{children:"obj"})," before ",(0,s.jsx)(e.code,{children:"print2"})," was created. As you can see in the results, by logging ",(0,s.jsx)(e.code,{children:"this"})," from ",(0,s.jsx)(e.code,{children:"print2"}),", ",(0,s.jsx)(e.code,{children:"obj"})," is the result."]}),"\n",(0,s.jsx)(e.h3,{id:"arguments-object",children:"Arguments Object"}),"\n",(0,s.jsxs)(e.p,{children:["In regular JavaScript functions, ",(0,s.jsx)(e.code,{children:"arguments"})," object(array-like) can be used to access the passed arguments when the function is invoked. But it's not available in arrow function."]}),"\n",(0,s.jsxs)(o.c,{children:[(0,s.jsx)(r.c,{value:"es5",label:"ES5",default:!0,children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"function print() {\n  // highlight-next-line\n  console.log(arguments);\n\n  for (let el of arguments)\n    console.log(el);\n}\n\nprint('hello', 123, true);\n// Arguments(3)\xa0['hello', 123, true, callee: \u0192, Symbol(Symbol.iterator): \u0192]\n// hello\n// 123\n// true\n"})})}),(0,s.jsx)(r.c,{value:"es6",label:"ES6",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// highlight-next-line\nconst print = (...args) => {\n  console.log(args)\n}\n\nprint('hello', 123, true);\n// ['hello', 123, true]\n// We can use `spread operator` at arrow function to achieve\n"})})})]}),"\n",(0,s.jsxs)(e.h3,{id:"avoiding-const-self--this-using-arrow-function",children:["avoiding ",(0,s.jsx)(e.code,{children:"const self = this"})," using Arrow function"]}),"\n",(0,s.jsxs)(o.c,{children:[(0,s.jsx)(r.c,{value:"self1",label:"self - Sample 1",default:!0,children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"function dummyFn()\n{\n  // highlight-start\n  const self = this;\n  this.myName = 'dummyFn';\n  // highlight-end\n  console.log(this); // dummyFn\xa0{myName: 'dummyFn'}\n\n  setTimeout( function()\n  {\n    console.log(this); // Window\xa0{window: Window, self: Window, document: document,\xa0\u2026}\n    // highlight-next-line\n    console.log('Hi, from - ' + self.myName); // Hi, from - dummyFn\n  }, 1000 );       \n}\n\n// highlight-next-line\nnew dummyFn();\n"})})}),(0,s.jsx)(r.c,{value:"arrow1",label:"Arrow - Sample 1",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"function dummyFn()\n{\n  // highlight-next-line\n  this.myName = 'dummyFn';\n  console.log(this); // dummyFn\xa0{myName: 'dummyFn'}\n\n  setTimeout(() => {\n    console.log(this); // dummyFn\xa0{myName: 'dummyFn'}\n    // highlight-next-line\n    console.log('Hi, from - ' + this.myName); // Hi, from - dummyFn\n  },1000 );       \n}\n\n// highlight-next-line\nnew dummyFn();\n"})})}),(0,s.jsx)(r.c,{value:"self2",label:"self - Sample 2",default:!0,children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"function dummyFn()\n{\n  // highlight-next-line\n  this.myName = 'dummyFn';\n  console.log(this); // Window\xa0{window: Window,..., myName: \"dummyFn\",\xa0\u2026}\n\n  setTimeout( function()\n  {\n    console.log(this); // Window\xa0{window: Window,..., myName: \"dummyFn\",\xa0\u2026}\n    // highlight-next-line\n    console.log('Hi, from - ' + this.myName);\n  }, 1000 );       \n}\n\n// highlight-next-line\ndummyFn();\n"})})}),(0,s.jsx)(r.c,{value:"arrow2",label:"Arrow - Sample 2",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"function dummyFn()\n{\n  // highlight-next-line\n  this.myName = 'dummyFn';\n  console.log(this); // Window\xa0{window: Window,..., myName: \"dummyFn\",\xa0\u2026}\n\n  setTimeout(() => {\n    console.log(this); // Window\xa0{window: Window,..., myName: \"dummyFn\",\xa0\u2026}\n    // highlight-next-line\n    console.log('Hi, from - ' + this.myName); // Hi, from - dummyFn\n  },1000 );       \n}\n\n// highlight-next-line\ndummyFn();\n"})})})]}),"\n",(0,s.jsxs)(e.p,{children:["If we want to do like the above(",(0,s.jsx)(e.code,{children:"self - Sample 1"})," tab), but want to avoid the usage of a variable like ",(0,s.jsx)(e.code,{children:"self"})," by using ",(0,s.jsx)(e.code,{children:"call()"})," or ",(0,s.jsx)(e.code,{children:"apply()"})," instead. soon we can realize that we can't do it. Because ",(0,s.jsx)(e.code,{children:"setTimeout()"})," is responsible for the invocation of the ",(0,s.jsx)(e.code,{children:"lambda"}),", making it impossible for us to leverage these alternate invocation styles. If we still manage it, then we would have ended up creating some intermediary variable to hold a reference to the object. The only alternate option is using arrow function."]}),"\n",(0,s.jsxs)(e.p,{children:["A ",(0,s.jsx)(e.strong,{children:"JavaScript Lambda Function"})," is an anonymous function written without a name or a function definition. These functions are often referred to as ",(0,s.jsx)(e.strong,{children:"arrow function"})," because they use the ",(0,s.jsx)(e.strong,{children:"fat arrow"})," (=>) syntax to define the function."]}),"\n",(0,s.jsx)(e.h3,{id:"understanding-call-bind-and-apply",children:"Understanding Call, Bind and Apply"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.code,{children:"bind()"})," Method"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(l.c,{color:"#C0C0C0",children:"Syntax"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"bind(thisArg)\nbind(thisArg, arg1, ...argN)\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const car = { \n  registrationNumber: 'GA12345',\n  brand: 'Toyota',\n\n  displayDetails: function(){\n    console.log(this.registrationNumber + ' ' + this.brand);\n  }\n}\n\ncar.displayDetails(); // GA12345 Toyota\n\n// highlight-next-line\nconst myCarDetails =  car.displayDetails;\nmyCarDetails(); // undefined undefined\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Well, this(",(0,s.jsx)(e.code,{children:"myCarDetails();"}),") won\u2019t work, as the ",(0,s.jsx)(e.code,{children:"this"})," will be now ",(0,s.jsx)(e.strong,{children:"assigned to the global context"})," which doesn\u2019t have neither the registrationNumber nor the brand property."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const myCarDetails = car.displayDetails.bind(car); \nmyCarDetails(); // GA12345 Toyota\n"})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"bind()"})," method ",(0,s.jsx)(e.strong,{children:"creates a new function"})," where ",(0,s.jsx)(e.code,{children:"this"})," ",(0,s.jsxs)(e.em,{children:["refers to the parameter in the ",(0,s.jsx)(e.strong,{children:"parenthesis"})]})," in the above case ",(0,s.jsx)(e.code,{children:"car"}),". This way the ",(0,s.jsx)(e.code,{children:"bind()"})," method enables calling a function with a specified ",(0,s.jsx)(e.code,{children:"this"})," value."]}),"\n",(0,s.jsxs)(e.p,{children:["What if we would like to pass a parameter to the ",(0,s.jsx)(e.code,{children:"displayDetails"})," function? We can use the bind method again."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const car = { \n  registrationNumber: 'GA12345',\n  brand: 'Toyota',\n\n  displayDetails: function(ownerName){\n    console.log(ownerName + ', this is your car: ' + this.registrationNumber + ' ' + this.brand);\n  }\n}\n\n// highlight-next-line\nconst myCarDetails = car.displayDetails.bind(car, 'Vivian');\nmyCarDetails(); // Vivian, this is your car: GA12345 Toyota\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.code,{children:"call()"})," Method"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"call"})," method sets the ",(0,s.jsxs)(e.strong,{children:[(0,s.jsx)(e.code,{children:"this"})," inside the function and ",(0,s.jsx)(e.em,{children:(0,s.jsx)(e.strong,{children:"immediately"})})," executes that function"]}),"."]}),"\n",(0,s.jsx)(e.admonition,{type:"info",children:(0,s.jsxs)(e.p,{children:["The difference between ",(0,s.jsx)(e.code,{children:"call()"})," and ",(0,s.jsx)(e.code,{children:"bind()"})," is that the ",(0,s.jsx)(e.code,{children:"call()"})," ",(0,s.jsxs)(e.strong,{children:["sets the ",(0,s.jsx)(e.code,{children:"this"})," keyword and executes the function immediately"]})," and it ",(0,s.jsx)(e.strong,{children:"does not create a new copy of the function"}),", while the ",(0,s.jsx)(e.code,{children:"bind()"})," creates a copy of that function(say, ",(0,s.jsx)(e.code,{children:"myCarDetails()"}),") and sets the ",(0,s.jsx)(e.code,{children:"this"})," keyword."]})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"car.displayDetails.bind(car, 'Vivian');\n// the above code'll create a new function as shown in the output\n/*\n\u0192 (){\n    console.log(this.registrationNumber + ' ' + this.brand);\n  }\n*/\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(l.c,{color:"#C0C0C0",children:"Syntax"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"call(thisArg)\ncall(thisArg, arg1,...argN)\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"displayDetails.call(car, 'Vivian'); \n// Vivian, this is your car: GA12345 Toyota\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.code,{children:"apply()"})," Method"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(l.c,{color:"#C0C0C0",children:"Syntax"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"apply(thisArg)\napply(thisArg, argsArray)\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"displayDetails.apply(car, ['Vivian']); \n// Vivian, this is your car: GA12345 Toyota\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"info",children:(0,s.jsxs)(e.p,{children:["Note that when using the ",(0,s.jsx)(e.code,{children:"apply()"})," function the ",(0,s.jsx)(e.strong,{children:"parameter must be placed in an array"}),". ",(0,s.jsx)(e.code,{children:"call()"})," accepts ",(0,s.jsx)(e.strong,{children:"both an array of parameters and a parameter itself"}),". Both are great tools for borrowing functions in JavaScript."]})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"function greeting() {\n  console.log(`Hi, I am ${this.name} and I am ${this.age} years old`);\n}\n\nconst john = {\n  name: 'John',\n  age: 24,\n};\n\nconst jane = {\n  name: 'Jane',\n  age: 22,\n};\n\nconst bindFn = greeting.bind(jane);\nbindFn(); // Hi, I am Jane and I am 22 years old\n\ngreeting.call(john); // Hi, I am John and I am 24 years old\ngreeting.apply(jane); // Hi, I am Jane and I am 22 years old\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Real time use case for ",(0,s.jsx)(e.code,{children:"bind"})," as below"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const counter = {\n  count: 0,\n\n  incrementCounter: function() {\n    console.log(this);\n    this.count++;\n  }\n}\n\ndocument.querySelector('.btn')\n  .addEventListener('click', counter.incrementCounter.bind(counter));\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsxs)(e.strong,{children:["we cannot use ",(0,s.jsx)(e.code,{children:"bind"}),", ",(0,s.jsx)(e.code,{children:"call"}),", and ",(0,s.jsx)(e.code,{children:"apply"})," in arrow functions"]}),". They are lexically scoped, which means that they use the ",(0,s.jsx)(e.code,{children:"this"})," value of the surrounding context. This is in contrast to regular function expressions, which create their own this value. When these methods(",(0,s.jsx)(e.code,{children:"bind"}),", ",(0,s.jsx)(e.code,{children:"call"}),", and ",(0,s.jsx)(e.code,{children:"apply"}),") are called on an arrow function, they simply ignore the thisArg parameter and pass in the this value of the surrounding context."]}),"\n",(0,s.jsxs)(e.p,{children:["you can ",(0,s.jsx)(e.strong,{children:"re-bind arrow functions"}),", but you just can't change the meaning of ",(0,s.jsx)(e.code,{children:"this"})," in arrow function"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"((a, b, c) => {\n  console.info(a, b, c) // 1, 2, 3\n// highlight-next-line  \n}).bind(undefined, 1, 2, 3)();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://blog.greenroots.info/my-favorite-javascript-tips-and-tricks",children:"My Favorite JavaScript Tips and Tricks"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsxs)(e.a,{href:"https://dillionmegida.com/p/this-demystified/",children:["Almighty ",(0,s.jsx)(e.code,{children:"this"}),", Demystified"]})}),"\n"]})]})}function g(n={}){const{wrapper:e}={...(0,t.M)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(m,{...n})}):m(n)}},87768:(n,e,i)=>{i.d(e,{c:()=>r});i(11504);var s=i(65456);const t={tabItem:"tabItem_Ymn6"};var o=i(17624);function r(n){let{children:e,hidden:i,className:r}=n;return(0,o.jsx)("div",{role:"tabpanel",className:(0,s.c)(t.tabItem,r),hidden:i,children:e})}},61268:(n,e,i)=>{i.d(e,{c:()=>v});var s=i(11504),t=i(65456),o=i(53943),r=i(55592),l=i(95288),a=i(10632),c=i(27128),d=i(21148);function h(n){return s.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,s.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(n){const{values:e,children:i}=n;return(0,s.useMemo)((()=>{const n=e??function(n){return h(n).map((n=>{let{props:{value:e,label:i,attributes:s,default:t}}=n;return{value:e,label:i,attributes:s,default:t}}))}(i);return function(n){const e=(0,c.w)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,i])}function m(n){let{value:e,tabValues:i}=n;return i.some((n=>n.value===e))}function g(n){let{queryString:e=!1,groupId:i}=n;const t=(0,r.Uz)(),o=function(n){let{queryString:e=!1,groupId:i}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:e,groupId:i});return[(0,a._M)(o),(0,s.useCallback)((n=>{if(!o)return;const e=new URLSearchParams(t.location.search);e.set(o,n),t.replace({...t.location,search:e.toString()})}),[o,t])]}function j(n){const{defaultValue:e,queryString:i=!1,groupId:t}=n,o=u(n),[r,a]=(0,s.useState)((()=>function(n){let{defaultValue:e,tabValues:i}=n;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${i.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=i.find((n=>n.default))??i[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:e,tabValues:o}))),[c,h]=g({queryString:i,groupId:t}),[j,x]=function(n){let{groupId:e}=n;const i=function(n){return n?`docusaurus.tab.${n}`:null}(e),[t,o]=(0,d.IN)(i);return[t,(0,s.useCallback)((n=>{i&&o.set(n)}),[i,o])]}({groupId:t}),p=(()=>{const n=c??j;return m({value:n,tabValues:o})?n:null})();(0,l.c)((()=>{p&&a(p)}),[p]);return{selectedValue:r,selectValue:(0,s.useCallback)((n=>{if(!m({value:n,tabValues:o}))throw new Error(`Can't select invalid tab value=${n}`);a(n),h(n),x(n)}),[h,x,o]),tabValues:o}}var x=i(93664);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=i(17624);function y(n){let{className:e,block:i,selectedValue:s,selectValue:r,tabValues:l}=n;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.MV)(),d=n=>{const e=n.currentTarget,i=a.indexOf(e),t=l[i].value;t!==s&&(c(e),r(t))},h=n=>{let e=null;switch(n.key){case"Enter":d(n);break;case"ArrowRight":{const i=a.indexOf(n.currentTarget)+1;e=a[i]??a[0];break}case"ArrowLeft":{const i=a.indexOf(n.currentTarget)-1;e=a[i]??a[a.length-1];break}}e?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.c)("tabs",{"tabs--block":i},e),children:l.map((n=>{let{value:e,label:i,attributes:o}=n;return(0,f.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:n=>a.push(n),onKeyDown:h,onClick:d,...o,className:(0,t.c)("tabs__item",p.tabItem,o?.className,{"tabs__item--active":s===e}),children:i??e},e)}))})}function b(n){let{lazy:e,children:i,selectedValue:t}=n;const o=(Array.isArray(i)?i:[i]).filter(Boolean);if(e){const n=o.find((n=>n.props.value===t));return n?(0,s.cloneElement)(n,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:o.map(((n,e)=>(0,s.cloneElement)(n,{key:e,hidden:n.props.value!==t})))})}function w(n){const e=j(n);return(0,f.jsxs)("div",{className:(0,t.c)("tabs-container",p.tabList),children:[(0,f.jsx)(y,{...n,...e}),(0,f.jsx)(b,{...n,...e})]})}function v(n){const e=(0,x.c)();return(0,f.jsx)(w,{...n,children:h(n.children)},String(e))}},94384:(n,e,i)=>{i.d(e,{c:()=>t});i(11504);var s=i(17624);function t(n){let{children:e,color:i,highlight:t="bg",fontWeight:o="normal",textDecoration:r="none",fontStyle:l="normal",textAlign:a="left"}=n;return"fg"===t?(0,s.jsx)("span",{style:{color:i,fontWeight:o,textDecoration:r,fontStyle:l,textAlign:a},children:e}):"format"===t?(0,s.jsx)("div",{style:{textAlign:a,color:i,fontWeight:o,textDecoration:r,fontStyle:l},children:e}):(0,s.jsx)("span",{style:{backgroundColor:i,borderRadius:"4px",color:"#fff",padding:"0.2rem",paddingTop:"0"},children:e})}},4552:(n,e,i)=>{i.d(e,{I:()=>l,M:()=>r});var s=i(11504);const t={},o=s.createContext(t);function r(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);